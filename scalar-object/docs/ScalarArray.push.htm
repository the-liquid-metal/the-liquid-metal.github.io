<html>
<head>
    <script src="jquery-2.0.3.min.js"></script>
    <script src="jquery.snippet.min.js"></script>
    <script src="individual.js"></script>
    <link rel="stylesheet" href="jquery.snippet.min.css"/>
    <link rel="stylesheet" href="inject.css"/>
    <link rel="stylesheet" href="individual.css"/>
</head>
<body>
<div class="ajax-area">
    <h1>push</h1>

    <div class="short-description">
        <code>push (mixed ...<var>$values</var>): static</code>
        <p>
            Alias of <a href="http://php.net/manual/en/function.array-push.php">array_push</a>.<br/>
            Pushes one or more elements onto the end.
        </p>
    </div>

    <p>
        <strong>push()</strong> treats <em>internal array</em> as a stack, and pushes the passed
        variables onto the end of <em>internal array</em>. The length of <em>internal array</em>
        increases by the number of variables pushed. Has the same effect as: <code>$array[] = $var;</code>
        repeated for each passed value.
    </p>

    <h3>Parameters</h3>
    <dl>
        <dt>$value1</dt>
        <dd>The first value to push onto the end of the <em>internal array</em>.</dd>

        <dt>...</dt>
        <dd>More values to push onto the end of the <em>internal array</em>.</dd>
    </dl>

    <h3>Return Values</h3>
    <p>The new number of elements in the array.</p>

    <pre class="php-code">
        $arr = new ScalarArray("string", false, ["orange", "banana"]);
        $arr->push("apple", "raspberry"); // output: ["orange", "banana", "apple", "raspberry"]
    </pre>
</div>
</body>
