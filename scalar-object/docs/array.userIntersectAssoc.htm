<html>
<head>
  <script src="jquery-2.0.3.min.js"></script>
  <script src="jquery.snippet.min.js"></script>
  <script src="individual.js"></script>
  <link rel="stylesheet" href="jquery.snippet.min.css"/>
  <link rel="stylesheet" href="inject.css"/>
  <link rel="stylesheet" href="individual.css"/>
</head>
<body>
<div class="ajax-area">
  <h1>userIntersectAssoc</h1>

  <div class="short-description">
    <code>userIntersectAssoc( array <var>$array2</var>, array <var>...</var>, callable <var>$valueComparator</var> ): array</code>
    <p>
      Context: array.<br/>
      Alias of <a href="http://php.net/manual/en/function.array-uintersect-assoc.php">array_uintersect_assoc</a>.<br/>
      Computes the intersection with additional index check, compares data using a callback function.
    </p>
  </div>

  <div>
    <p>
      Computes the intersection of arrays with additional index check, compares
      data by a callback function.
    </p>
    <p>
      Note that the keys are used in the comparison unlike in
      <a href="userIntersect.htm">userIntersect()</a>.
      The data is compared by using a callback function.
    </p>
  </div>

  <div>
    <h3>Parameters</h3>
    <dl>
      <dt>array2</dt>
      <dd>The second array.</dd>

      <dt>...</dt>
      <dd>More arrays to compare against</dd>

      <dt>$valueComparator</dt>
      <dd>
        The comparison function must return an integer less than, equal to, or greater than zero if
        the first argument is considered to be respectively less than, equal to, or greater than the second.
      </dd>
    </dl>
  </div>

  <div>
    <h3>Return Values</h3>
    <p>Returns an array containing all the values of <var>$scalarObject->val</var> that are present in all the arguments.</p>
  </div>

  <div class="examples">
    <p><strong>Example #1 userIntersectAssoc() example</strong></p>
    <pre class="php-code">
      <?php
      $array1 = array("a" => "green", "b" => "brown", "c" => "blue", "red");
      $array2 = array("a" => "GREEN", "B" => "brown", "yellow", "red");

      print_r(userIntersectAssoc($array1, $array2, "strcasecmp"));
      ?>
    </pre>

    <div>The above example will output:</div>
    <pre class="output">
      Array
      (
          [a] => green
      )
    </pre>
  </div>
</div>
</body>
