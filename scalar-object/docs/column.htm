<html>
<head>
  <script src="jquery-2.0.3.min.js"></script>
  <script src="jquery.snippet.min.js"></script>
  <script src="individual.js"></script>
  <link rel="stylesheet" href="jquery.snippet.min.css"/>
  <link rel="stylesheet" href="inject.css"/>
  <link rel="stylesheet" href="individual.css"/>
</head>
<body>
<div class="short-description">
    <code>column( mixed <var>$columnKey</var>, mixed <var>$indexKey</var> = null ): array</code>
    <p>
      Context: array.<br/>
      Alias of <a href="http://php.net/manual/en/function.array-column.php">array_column</a>.<br/>
      Returns the values from a single column.
    </p>
</div>
<div class="ajax-area">
  <h1>column</h1>

  <div>
    <strong>column()</strong> returns the values from a single column of
    the <var>$scalarObject->val</var>, identified by the
    <var>$columnKey</var>. Optionally, you may provide an
    <var>$indexKey</var> to index the values in the returned array by
    the values from the <var>$indexKey</var> column in the input
    array.
  </div>

  <div>
    <h3>Parameters</h3>
    <dl>
      <dt>$columnKey</dt>
      <dd>
        The column of values to return. This value may be the integer key of the
        column you wish to retrieve, or it may be the string key name for an 
        associative array. It may also be <code>NULL</code> to return complete arrays
        (useful together with <var>$indexKey</var> to reindex the array).
      </dd>

      <dt>$indexKey</dt>
      <dd>
        The column to use as the index/keys for the returned array. This value
        may be the integer key of the column, or it may be the string key name.
      </dd>
    </dl>
  </div>

  <div>
    <h3>Return Values</h3>
    <p>An array of values representing a single column from the <var>$scalarObject->val</var>.</p>
  </div>

  <div class="examples">
    <p><strong>Example #1 Get column of first names from recordset</strong></p>
    <pre class="php-code">
      <?php
      // Array representing a possible record set returned from a database
      $records = array(
          array(
              'id' => 2135,
              'first_name' => 'John',
              'last_name' => 'Doe',
          ),
          array(
              'id' => 3245,
              'first_name' => 'Sally',
              'last_name' => 'Smith',
          ),
          array(
              'id' => 5342,
              'first_name' => 'Jane',
              'last_name' => 'Jones',
          ),
          array(
              'id' => 5623,
              'first_name' => 'Peter',
              'last_name' => 'Doe',
          )
      );
       
      $first_names = column($records, 'first_name');
      print_r($first_names);
      ?>
    </pre>

    <div>The above example will output:</div>
    <pre class="output">
      Array
      (
          [0] => John
          [1] => Sally
          [2] => Jane
          [3] => Peter
      )
    </pre>

    <p><strong>Example #2 Get column of last names from recordset, indexed by the "id" column</strong></p>
    <pre class="php-code">
      <?php
      // Using the $records array from Example #1
      $last_names = column($records, 'last_name', 'id');
      print_r($last_names);
      ?>
    </pre>

    <div>The above example will output:</div>
    <pre class="output">
      Array
      (
          [2135] => Doe
          [3245] => Smith
          [5342] => Jones
          [5623] => Doe
      )
    </pre>
  </div>
</div>
</body>
