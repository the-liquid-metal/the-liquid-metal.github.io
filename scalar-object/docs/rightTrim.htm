<html>
<head>
  <script src="jquery-2.0.3.min.js"></script>
  <script src="jquery.snippet.min.js"></script>
  <script src="individual.js"></script>
  <link rel="stylesheet" href="jquery.snippet.min.css"/>
  <link rel="stylesheet" href="inject.css"/>
  <link rel="stylesheet" href="individual.css"/>
</head>
<body>
<div class="ajax-area">
  <h1>rightTrim</h1>
  <div>
    <p>
      This function returns a string with whitespace stripped from the
      end of <code>str</code>.
    </p>
    <p>Without the second parameter, <strong>rightTrim()</strong> will strip these characters:</p>

    <ul>
      <li>
        " " (<acronym title="American Standard Code for Information Interchange">ASCII</acronym> <em>32</em>
        (<em>0x20</em>)), an ordinary space.
      </li>
      <li>
        "\t" (<acronym title="American Standard Code for Information Interchange">ASCII</acronym> <em>9</em>
        (<em>0x09</em>)), a tab.
      </li>
      <li>
        "\n" (<acronym title="American Standard Code for Information Interchange">ASCII</acronym> <em>10</em>
        (<em>0x0A</em>)), a new line (line feed).
      </li>
      <li>
        "\r" (<acronym title="American Standard Code for Information Interchange">ASCII</acronym> <em>13</em>
        (<em>0x0D</em>)), a carriage return.
      </li>
      <li>
        "\0" (<acronym title="American Standard Code for Information Interchange">ASCII</acronym> <em>0</em>
        (<em>0x00</em>)), the <em>NULL</em>-byte.
      </li>
      <li>
        "\x0B" (<acronym title="American Standard Code for Information Interchange">ASCII</acronym> <em>11</em>
        (<em>0x0B</em>)), a vertical tab.
      </li>
    </ul>
  </div>

  <div>
    <h3>Parameters</h3>
    <dl>
      <dt>str</dt>
      <dd>The input string.</dd>

      <dt>character_mask</dt>
      <dd>
        You can also specify the characters you want to strip, by means of the
        <code>character_mask</code> parameter. Simply list all characters that you
        want to be stripped. With <em>..</em> you can specify a range of characters.
      </dd>
    </dl>
  </div>

  <div>
    <h3>Return Values</h3>
    <p>Returns the modified string.</p>
  </div>

  <div class="examples">
    <p><strong>Example #1 Usage example of <strong>rightTrim()</strong></strong></p>
    <pre class="php-code">
      <?php
      $text = "\t\tThese are a few words :) ...  ";
      $binary = "\x09Example string\x0A";
      $hello  = "Hello World";
      var_dump($text, $binary, $hello);

      print "\n";

      $trimmed = rightTrim($text);
      var_dump($trimmed);

      $trimmed = rightTrim($text, " \t.");
      var_dump($trimmed);

      $trimmed = rightTrim($hello, "Hdle");
      var_dump($trimmed);

      // trim the ASCII control characters at the end of $binary
      // (from 0 to 31 inclusive)
      $clean = rightTrim($binary, "\x00..\x1F");
      var_dump($clean);
      ?>
    </pre>

    <div>The above example will output:</div>
    <pre class="output">
      string(32) "        These are a few words :) ...  "
      string(16) "    Example string
      "
      string(11) "Hello World"
      
      string(30) "        These are a few words :) ..."
      string(26) "        These are a few words :)"
      string(9) "Hello Wor"
      string(15) "    Example string"
    </pre>
  </div>
</div>
</body>
