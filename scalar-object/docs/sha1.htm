<h1>sha1</h1>

 <div>
   Calculates the sha1 hash of <code>str</code> using the
   <a href="http://www.faqs.org/rfcs/rfc3174">&raquo; US Secure Hash Algorithm 1</a>.
 </div>

 <div>
  <h3>Parameters</h3>
   <dl>
     <dt>str</dt>
     <dd>The input string.</dd>

     <dt>raw_output</dt>
     <dd>If the optional <code>raw_output</code> is set to <code>TRUE</code>,
       then the sha1 digest is instead returned in raw binary format with a
       length of 20, otherwise the returned value is a 40-character
       hexadecimal number.</dd>
   </dl>
 </div>

 <div>
  <h3>Return Values</h3>
  <p>Returns the sha1 hash as a string.</p>
 </div>

 <div class="examples">
    <p><strong>Example #1 A sha1() example</strong></p>
<pre class="php-code">&lt;?php
$str = 'apple';

if (sha1($str) === 'd0be2dc421be4fcd0172e5afceea3970e2f3d940') {
    echo "Would you like a green or red apple?";
}
?></pre>
 </div>

  <blockquote>
    <strong>Note</strong>: <strong>Secure password hashing</strong><br/>
    It is not recommended to use this function to secure passwords, due to the fast nature of this hashing algorithm. See
    <a href="faq.passwords.php#faq.passwords.fasthash">here</a> for details.
  </blockquote>
