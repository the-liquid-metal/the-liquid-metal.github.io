<html>
<head>
  <script src="jquery-2.0.3.min.js"></script>
  <script src="jquery.snippet.min.js"></script>
  <script src="individual.js"></script>
  <link rel="stylesheet" href="jquery.snippet.min.css"/>
  <link rel="stylesheet" href="inject.css"/>
  <link rel="stylesheet" href="individual.css"/>
</head>
<body>
<div class="short-description">
    <code>slice( int <var>$offset</var>, int <var>$length</var> = NULL, bool <var>$preserveKeys</var> = false ): array</code>
    <p>
      Context: array.<br/>
      Alias of <a href="http://php.net/manual/en/function.array-slice.php">array_slice</a>.<br/>
      Extracts a slice.
    </p>
</div>
<div class="ajax-area">
  <h1>slice</h1>

  <div>
    <strong>slice()</strong> returns the sequence of elements
    from the array <var>$scalarObject->val</var> as specified by the
    <var>$offset</var> and <code>length</code> parameters.
  </div>

  <div>
    <h3>Parameters</h3>
    <dl>
      <dt>$offset</dt>
      <dd>
        If <var>$offset</var> is non-negative, the sequence will start at that
        offset in the <var>$scalarObject->val</var>.  If <var>$offset</var> is negative,
        the sequence will start that far from the end of the <var>$scalarObject->val</var>.
      </dd>

      <dt>$length</dt>
      <dd>
        If <code>length</code> is given and is positive, then the sequence will have up
        to that many elements in it. If the array is shorter than the <code>length</code>,
        then only the available array elements will be present. If <code>length</code>
        is given and is negative then the sequence will stop that many elements from the
        end of the array. If it is omitted, then the sequence will have everything from
        <var>$offset</var> up until the end of the <var>$scalarObject->val</var>.
      </dd>

      <dt>$preserveKeys</dt>
      <dd>
        Note that <strong>slice()</strong> will reorder and reset the numeric array indices
        by default. You can change this behaviour by setting <var>$preserveKeys</var> to
        <code>TRUE</code>.
      </dd>
    </dl>
  </div>

  <div>
    <h3>Return Values</h3>
    <p>The slice.</p>
  </div>

  <div class="examples">
    <p><strong>Example #1 slice() examples</strong></p>
    <pre class="php-code">
      <?php
      $input = array("a", "b", "c", "d", "e");
      
      $output = slice($input, 2);      // returns "c", "d", and "e"
      $output = slice($input, -2, 1);  // returns "d"
      $output = slice($input, 0, 3);   // returns "a", "b", and "c"
      
      // note the differences in the array keys
      print_r(slice($input, 2, -1));
      print_r(slice($input, 2, -1, true));
      ?>
    </pre>

    <div>The above example will output:</div>
    <pre class="output">
      Array
      (
          [0] => c
          [1] => d
      )
      Array
      (
          [2] => c
          [3] => d
      )
    </pre>
  </div>
</div>
</body>
