<h1>replace</h1>
 <div>
  <p>
   <strong>replace()</strong> replaces the values of
   <code>array1</code> with values having the same keys in each of the following
   arrays. If a key from the first array exists in the second array, its value
   will be replaced by the value from the second array. If the key exists in the
   second array, and not the first, it will be created in the first array.
   If a key only exists in the first array, it will be left as is.
   If several arrays are passed for replacement, they will be processed
   in order, the later arrays overwriting the previous values.
  </p>
  <p>
   <strong>replace()</strong> is not recursive : it will replace
   values in the first array by whatever type is in the second array.
  </p>
 </div>

 <div>
  <h3>Parameters</h3>
  <p>
   <dl>
     <dt><code>array1</code></dt>
     <dd>The array in which elements are replaced.</dd>

     <dt><code>array2</code></dt>
     <dd>The array from which elements will be extracted.</dd>

     <dt><code>...</code></dt>
     <dd>More arrays from which elements will be extracted.
       Values from later arrays overwrite the previous values.</dd>
   </dl>
  </p>
 </div>

 <div>
  <h3>Return Values</h3>
  <p>
   Returns an <a href="language.types.array.php">array</a>, or <strong><code>NULL</code></strong> if an error occurs.
  </p>
 </div>

 <div class="examples">
  <p>
   <div>
    <p><strong>Example #1 replace() example</strong></p>
    <pre><span style="color: #0000BB">&lt;?php<br />$base&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"orange"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"banana"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"apple"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"raspberry"</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">$replacements&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #0000BB">0&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"pineapple"</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">4&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"cherry"</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">$replacements2&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #0000BB">0&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"grape"</span><span style="color: #007700">);<br /><br /></span><span style="color: #0000BB">$basket&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">replace</span><span style="color: #007700">(</span><span style="color: #0000BB">$base</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$replacements</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$replacements2</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">print_r</span><span style="color: #007700">(</span><span style="color: #0000BB">$basket</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">?&gt;</span></pre>

    <div>The above example will output:</div>
<pre>
Array
(
    [0] =&gt; grape
    [1] =&gt; banana
    [2] =&gt; apple
    [3] =&gt; raspberry
    [4] =&gt; cherry
)
</pre>
   </div>
  </p>
 </div>