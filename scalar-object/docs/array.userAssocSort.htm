<html>
<head>
  <script src="jquery-2.0.3.min.js"></script>
  <script src="jquery.snippet.min.js"></script>
  <script src="individual.js"></script>
  <link rel="stylesheet" href="jquery.snippet.min.css"/>
  <link rel="stylesheet" href="inject.css"/>
  <link rel="stylesheet" href="individual.css"/>
</head>
<body>
<div class="ajax-area">
  <h1>userAssocSort</h1>

  <div class="short-description">
    <code>userAssocSort( callable <var>$valueComparator</var> ): array</code>
    <p>
      Context: array.<br/>
      Alias of <a href="http://php.net/manual/en/function.uasort.php">uasort</a>.<br/>
      Sorts values using a callback function and maintain index association.
    </p>
  </div>

  <div>
    <p>
      This function sorts <var>$scalarObject->val</var> such that array indices maintain their
      correlation with the array elements they are associated with, using a
      user-defined comparison function.
    </p>
    <p>
      This is used mainly when sorting associative arrays where the actual
      element order is significant.
    </p>
    <blockquote>
      <strong>Note</strong>: If two members compare as equal, their relative
      order in the sorted array is undefined.
    </blockquote>
  </div>

  <div>
    <h3>Parameters</h3>
    <dl>
      <dt>$valueComparator</dt>
      <dd>
        See <a href="userSort.htm">userSort()</a> and <a href="userKeySort.htm">userKeySort()</a>
        for examples of user-defined comparison functions.
      </dd>
    </dl>
  </div>

  <div>
    <h3>Return Values</h3>
    <p><code>TRUE</code> on success or <code>FALSE</code> on failure.</p>
  </div>

  <div class="examples">
    <p><strong>Example #1 Basic userAssocSort() example</strong></p>
    <pre class="php-code">
      <?php
      // Comparison function
      function cmp($a, $b) {
          if ($a == $b) {
              return 0;
          }
          return ($a &lt; $b) ? -1 : 1;
      }

      // Array to be sorted
      $array = array('a' => 4, 'b' => 8, 'c' => -1, 'd' => -9, 'e' => 2, 'f' => 5, 'g' => 3, 'h' => -4);
      print_r($array);

      // Sort and print the resulting array
      userAssocSort($array, 'cmp');
      print_r($array);
      ?>
    </pre>

    <div>The above example will output:</div>
    <pre class="output">
      Array
      (
          [a] => 4
          [b] => 8
          [c] => -1
          [d] => -9
          [e] => 2
          [f] => 5
          [g] => 3
          [h] => -4
      )
      Array
      (
          [d] => -9
          [h] => -4
          [c] => -1
          [e] => 2
          [g] => 3
          [a] => 4
          [f] => 5
          [b] => 8
      )
    </pre>
  </div>
</div>
</body>
