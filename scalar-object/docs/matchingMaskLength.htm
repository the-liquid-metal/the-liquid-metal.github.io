<h1>matchingMaskLength</h1>

 <div>
  <p>
   Finds the length of the initial segment of <code>subject</code>
   that contains <em>only</em> characters from <code>mask</code>.
  </p>
  <p>
   If <code>start</code> and <code>length</code>
   are omitted, then all of <code>subject</code> will be
   examined. If they are included, then the effect will be the same as
   calling <em>matchingMaskLength(substr($subject, $start, $length),
   $mask)</em> (see <a href="function.substr.php">substr</a>
   for more information).
  </p>
  <p>
   The line of code:
<pre class="php-code">
<?php
$var = matchingMaskLength("42 is the answer to the 128th question.", "1234567890");
?>
</pre>
   will assign <em>2</em> to <var><var>$var</var></var>,
   because the string "42" is the initial segment
   of <code>subject</code> that consists only of characters
   contained within "1234567890".
  </p>
 </div>

 <div>
  <h3>Parameters</h3>
   <dl>
     <dt>subject</dt>
     <dd>The string to examine.</dd>

     <dt>mask</dt>
     <dd>The list of allowable characters.</dd>

     <dt>start</dt>
     <dd><p>The position in <code>subject</code> to
       start searching.
      </p>
      <p>
       If <code>start</code> is given and is non-negative,
       then <strong>matchingMaskLength()</strong> will begin
       examining <code>subject</code> at
       the <code>start</code>'th position. For instance, in
       the string '<em>abcdef</em>', the character at
       position <em>0</em> is '<em>a</em>', the
       character at position <em>2</em> is
       '<em>c</em>', and so forth.
      </p>
      <p>
       If <code>start</code> is given and is negative,
       then <strong>matchingMaskLength()</strong> will begin
       examining <code>subject</code> at
       the <code>start</code>'th position from the end
       of <code>subject</code>.</p></dd>

     <dt>length</dt>
     <dd><p>The length of the segment from <code>subject</code>
       to examine. 
      </p>
      <p>
       If <code>length</code> is given and is non-negative,
       then <code>subject</code> will be examined
       for <code>length</code> characters after the starting
       position.
      </p>
      <p>
        If <code>length</code> is given and is negative,
        then <code>subject</code> will be examined from the
        starting position up to <code>length</code>
        characters from the end of <code>subject</code>.</p></dd>
   </dl>
 </div>

 <div>
  <h3>Return Values</h3>
  <p>
   Returns the length of the initial segment of <code>subject</code>
   which consists entirely of characters in <code>mask</code>.
  </p>
  <blockquote><strong>Note</strong>:
    When a <code>start</code> parameter is set, the returned length
    is counted starting from this position, not from the beginning of
    <code>subject</code>.
   </blockquote>
 </div>

 <div class="examples">
    <p><strong>Example #1 matchingMaskLength() example</strong></p>
<pre class="php-code">
<?php
// subject does not start with any characters from mask
var_dump(matchingMaskLength("foo", "o"));

// examine two characters from subject starting at offset 1
var_dump(matchingMaskLength("foo", "o", 1, 2));

// examine one character from subject starting at offset 1
var_dump(matchingMaskLength("foo", "o", 1, 1));
?>
</pre>
    <div>The above example will output:</div>
<pre class="output">
int(0)
int(2)
int(1)
</pre>
 </div>

 <blockquote><strong>Note</strong>:This function is binary-safe.</blockquote>
