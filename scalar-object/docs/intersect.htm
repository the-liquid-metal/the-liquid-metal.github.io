
 <div>
  <h1>intersect</h1>
 </div>
 
 <div>
  <p>
   <span><strong>intersect()</strong></span> returns an array
   containing all the values of <code class="parameter">array1</code>
   that are present in all the arguments.
   Note that keys are preserved.
  </p>
 </div>


 <div class="parameters">
  <h3>Parameters</h3>
  <p>
   <dl>

    
     <dt>
<code class="parameter">array1</code></dt>

     <dd>

      <p>
       The array with master values to check.
      </p>
     </dd>

    
    
     <dt>
<code class="parameter">array2</code></dt>

     <dd>

      <p>
       An array to compare values against.
      </p>
     </dd>

    
    
     <dt>
<code class="parameter">...</code></dt>

     <dd>

      <p>
       A variable list of arrays to compare.
      </p>
     </dd>

    
   </dl>

  </p>
 </div>


 <div class="returnvalues">
  <h3>Return Values</h3>
  <p>
   Returns an array containing all of the values in 
   <code class="parameter">array1</code> whose values exist in all of the parameters.
  </p>
 </div>
 

 <div class="examples">
  <p>
   <div>
    <p><strong>Example #1 <span><strong>intersect()</strong></span> example</strong></p>
    <div>
<div><code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br />$array1&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"a"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"green"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"red"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"blue"</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">$array2&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"b"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"green"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"yellow"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"red"</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">$result&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">intersect</span><span style="color: #007700">(</span><span style="color: #0000BB">$array1</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$array2</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">print_r</span><span style="color: #007700">(</span><span style="color: #0000BB">$result</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">?&gt;</span>
</span>
</code></div>
    </div>

    <div><p>The above example will output:</p></div>
    <div>
<div><pre>
Array
(
    [a] =&gt; green
    [0] =&gt; red
)
</pre></div>
    </div>
   </div>
  </p>
 </div>


 <div>
  <blockquote><p><strong>Note</strong>: 
   <span>
    Two elements are considered equal if and only if
    <em>(string) $elem1 === (string) $elem2</em>. In words:
    when the string representation is the same.
    
   </span>
  </p></blockquote>
 </div>
