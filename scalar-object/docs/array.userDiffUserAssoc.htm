<html>
<head>
  <script src="jquery-2.0.3.min.js"></script>
  <script src="jquery.snippet.min.js"></script>
  <script src="individual.js"></script>
  <link rel="stylesheet" href="jquery.snippet.min.css"/>
  <link rel="stylesheet" href="inject.css"/>
  <link rel="stylesheet" href="individual.css"/>
</head>
<body>
<div class="ajax-area">
  <h1>userDiffUserAssoc</h1>

  <div class="short-description">
    <code>userDiffUserAssoc( array <var>$array2</var>, array <var>...</var>, callable <var>$valueComparator</var>, callable <var>$keyComparator</var> ): array</code>
    <p>
      Context: array.<br/>
      Alias of <a href="http://php.net/manual/en/function.array-udiff-uassoc.php">array_udiff_uassoc</a>.<br/>
      Computes the difference with additional index check, compares data and indexes using separate callback functions.
    </p>
  </div>

  <div>
    <p>
      Computes the difference of arrays with additional index check, compares
      data and indexes by a callback function.
    </p>
    <p>
      Note that the keys are used in the comparison unlike 
      <a href="diff.htm">diff()</a> and <a href="userDiff.htm">userDiff()</a>.
    </p>
  </div>

  <div>
    <h3>Parameters</h3>
    <dl>
      <dt>$array2</dt>
      <dd>The second array.</dd>

      <dt>...</dt>
      <dd>More arrays to compare against</dd>

      <dt>$valueComparator</dt>
      <dd>
        The comparison function must return an integer less than, equal to, or greater than zero if the
        first argument is considered to be respectively less than, equal to, or greater than the second.
      </dd>

      <dt>$keyComparator</dt>
      <dd>
        The comparison of keys (indices) is done also by the callback function <var>$keyComparator</var>.
        This behaviour is unlike what <a href="userDiffAssoc.htm">userDiffAssoc()</a> does,
        since the latter compares the indices by using an internal function.
      </dd>
    </dl>
  </div>

  <div>
    <h3>Return Values</h3>
    <p>
      Returns an array containing all the values from
      <var>$scalarObject->val</var> that are not present in any of the other arguments.
    </p>
  </div>

  <div class="examples">
    <p><strong>Example #1 userDiffUserAssoc() example</strong></p>
    <pre class="php-code">
      <?php
      class cr {
          private $priv_member;
          function cr($val)
          {
              $this->priv_member = $val;
          }

          static function comp_func_cr($a, $b)
          {
              if ($a->priv_member === $b->priv_member) return 0;
              return ($a->priv_member > $b->priv_member)? 1:-1;
          }

          static function comp_func_key($a, $b)
          {
              if ($a === $b) return 0;
              return ($a > $b)? 1:-1;
          }
      }
      $a = array("0.1" => new cr(9), "0.5" => new cr(12), 0 => new cr(23), 1=> new cr(4), 2 => new cr(-15),);
      $b = array("0.2" => new cr(9), "0.5" => new cr(22), 0 => new cr(3), 1=> new cr(4), 2 => new cr(-15),);

      $result = userDiffUserAssoc($a, $b, array("cr", "comp_func_cr"), array("cr", "comp_func_key"));
      print_r($result);
      ?>
    </pre>

    <div>The above example will output:</div>
    <pre class="output">
      Array
      (
          [0.1] => cr Object
              (
                  [priv_member:private] => 9
              )
          [0.5] => cr Object
              (
                  [priv_member:private] => 12
              )
          [0] => cr Object
              (
                  [priv_member:private] => 23
              )
      )
    </pre>

    <p>
      In our example above you see the <code>"1" => new cr(4)</code>
      pair is present in both arrays and thus it is not in the output from the
      function. Keep in mind that you have to supply 2 callback functions.
    </p>
  </div>

  <blockquote>
    <strong>Note</strong>: Please note that this function only checks one dimension
    of a n-dimensional array. Of course you can check deeper dimensions by using, for
    example, <code>userDiffUserAssoc($array1[0], $array2[0], "data_compare_func",
    "key_compare_func");</code>.
  </blockquote>
</div>
</body>
