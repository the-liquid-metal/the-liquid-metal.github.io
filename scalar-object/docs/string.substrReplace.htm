<html>
<head>
  <script src="jquery-2.0.3.min.js"></script>
  <script src="jquery.snippet.min.js"></script>
  <script src="individual.js"></script>
  <link rel="stylesheet" href="jquery.snippet.min.css"/>
  <link rel="stylesheet" href="inject.css"/>
  <link rel="stylesheet" href="individual.css"/>
</head>
<body>
<div class="short-description">
  <code>substrReplace( mixed <var>$replacement</var>, mixed <var>$start</var>, mixed <var>$length</var> = null ): string</code>
  <p>
    Context: string.<br/>
    Alias of <a href="http://php.net/manual/en/function.substr-replace.php">substr_replace</a>.<br/>
    Replace text within a portion of a string.
  </p>
</div>
<div class="ajax-area">
  <h1>substrReplace</h1>

  <div>
    <p>
      <strong>substrReplace()</strong> replaces a copy of <var>$scalarObject->val</var> delimited by the
      <var>$start</var> and (optionally) <var>$length</var> parameters with the string given
      in <var>$replacement</var>. 
    </p>
    <p>
      An array of strings can be provided, in which case the replacements will occur on each string
      in turn. In this case, the <var>$replacement</var>, <var>$start</var> and <var>$length</var>
      parameters may be provided either as scalar values to be applied to each input string in turn,
      or as arrays, in which case the corresponding array element will be used for each input string.
    </p>
  </div>

  <div>
    <h3>Parameters</h3>
    <dl>
      <dt>$replacement</dt>
      <dd>The replacement string.</dd>

      <dt>$start</dt>
      <dd>
        <p>
          If <var>$start</var> is positive, the replacing will begin at the <var>$start</var>'th
          offset into <var>$scalarObject->val</var>.
        </p>
        <p>
          If <var>$start</var> is negative, the replacing will begin at the <var>$start</var>'th
          character from the end of <var>$scalarObject->val</var>.
        </p>
      </dd>

      <dt>$length</dt>
      <dd>
        If given and is positive, it represents the length of the portion of <var>$scalarObject->val</var>
        which is to be replaced. If it is negative, it represents the number of characters from the
        end of <var>$scalarObject->val</var> at which to stop replacing. If it is not given, then it will default
        to strlen( <var>$scalarObject->val</var> ); i.e. end the replacing at the end of <var>$scalarObject->val</var>. Of
        course, if <var>$length</var> is zero then this function will have the effect of inserting
        <var>$replacement</var> into <var>$scalarObject->val</var> at the given <var>$start</var> offset.
      </dd>
    </dl>
  </div>

  <div>
    <h3>Return Values</h3>
    <p>The result string is returned. If <var>$scalarObject->val</var> is an array then array is returned.</p>
  </div>

  <div class="examples">
    <p><strong>Example #1 Simple substrReplace() examples</strong></p>
    <pre class="php-code">
      <?php
      $var = 'ABCDEFGH:/MNRPQR/';
      echo "Original: $var&lt;hr />\n";

      /* These two examples replace all of $var with 'bob'. */
      echo substrReplace($var, 'bob', 0) . "&lt;br />\n";
      echo substrReplace($var, 'bob', 0, strlen($var)) . "&lt;br />\n";

      /* Insert 'bob' right at the beginning of $var. */
      echo substrReplace($var, 'bob', 0, 0) . "&lt;br />\n";

      /* These next two replace 'MNRPQR' in $var with 'bob'. */
      echo substrReplace($var, 'bob', 10, -1) . "&lt;br />\n";
      echo substrReplace($var, 'bob', -7, -1) . "&lt;br />\n";

      /* Delete 'MNRPQR' from $var. */
      echo substrReplace($var, '', 10, -1) . "&lt;br />\n";
      ?>
    </pre>

    <p><strong>Example #2 Using <strong>substrReplace()</strong> to replace multiple strings at once</strong></p>
    <pre class="php-code">
      <?php
      $input = array('A: XXX', 'B: XXX', 'C: XXX');

      // A simple case: replace XXX in each string with YYY.
      echo implode('; ', substrReplace($input, 'YYY', 3, 3))."\n";

      // A more complicated case where each replacement is different.
      $replace = array('AAA', 'BBB', 'CCC');
      echo implode('; ', substrReplace($input, $replace, 3, 3))."\n";

      // Replace a different number of characters each time.
      $length = array(1, 2, 3);
      echo implode('; ', substrReplace($input, $replace, 3, $length))."\n";
      ?>
    </pre>

    <div>The above example will output:</div>
    <pre class="output">
      A: YYY; B: YYY; C: YYY
      A: AAA; B: BBB; C: CCC
      A: AAAXX; B: BBBX; C: CCC
    </pre>
  </div>

  <blockquote><strong>Note</strong>: This function is binary-safe.</blockquote>
</div>
</body>
