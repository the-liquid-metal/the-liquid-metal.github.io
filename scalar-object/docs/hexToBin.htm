
 <div>
  <h1>hexToBin</h1>
 </div>

 <div>
  <p>
   Decodes a hexadecimally encoded binary string.
  </p>
  <div class="caution"><strong class="caution">Caution</strong>
   <p>
    This function does <em>NOT</em> convert a hexadecimal number to a binary
    number. This can be done using the <span><a href="function.base-convert.php" class="function">base_convert()</a></span> function.
   </p>
  </div>
 </div>

 <div class="parameters">
  <h3>Parameters</h3>
  <dl>

    <dt>
<code>data</code></dt>

    <dd>

     <p>
      Hexadecimal representation of data.
     </p>
    </dd>

  </dl>

 </div>

 <div class="returnvalues">
  <h3>Return Values</h3>
  <p>
   Returns the binary representation of the given data  or <strong><code>FALSE</code></strong> on failure.
  </p>
 </div>

 <div class="refsect1 errors">
  <h3>Errors/Exceptions</h3>
  <p>
   If the hexadecimal input string is of odd length or invalid hexadecimal string
   an <strong><code>E_WARNING</code></strong> level error is thrown.
  </p>
 </div>

 <div class="examples">
  <div>
   <p><strong>Example #1 <span><strong>hexToBin()</strong></span> example</strong></p>
   <div>
<div><code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br />$hex&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">hexToBin</span><span style="color: #007700">(</span><span style="color: #DD0000">"6578616d706c65206865782064617461"</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">var_dump</span><span style="color: #007700">(</span><span style="color: #0000BB">$hex</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">?&gt;</span>
</span>
</code></div>
   </div>

   <div><p>The above example will output
something similar to:</p></div>
   <div>
<div><pre>
string(16) &quot;example hex data&quot;
</pre></div>
   </div>
  </div>
 </div>
