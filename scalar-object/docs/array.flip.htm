<html>
<head>
  <script src="jquery-2.0.3.min.js"></script>
  <script src="jquery.snippet.min.js"></script>
  <script src="individual.js"></script>
  <link rel="stylesheet" href="jquery.snippet.min.css"/>
  <link rel="stylesheet" href="inject.css"/>
  <link rel="stylesheet" href="individual.css"/>
</head>
<body>
<div class="ajax-area">
  <h1>flip</h1>

  <div class="short-description">
    <code>flip( ): array</code>
    <p>
      Context: array.<br/>
      Alias of <a href="http://php.net/manual/en/function.array-flip.php">array_flip</a>.<br/>
      Exchanges all keys with their associated values.
    </p>
  </div>

  <div>
    <p>
      <strong>flip()</strong> returns an array
      in flip order, i.e. keys from <var>$scalarObject->val</var> become values and values
      from <var>$scalarObject->val</var> become keys.
    </p>
    <p>
      Note that the values of <var>$scalarObject->val</var> need to be valid keys, i.e. they need
      to be either integer or string. A warning will be emitted if a value has the wrong
      type, and the key/value pair in question <em>will not be included in the result</em>.
    </p>
    <p>
      If a value has several occurrences, the latest key will
      be used as its value, and all others will be lost.
    </p>
  </div>

  <div>
    <h3>Return Values</h3>
    <p>The flipped array on success and <code>NULL</code> on failure.</p>
  </div>

  <div class="examples">
    <p><strong>Example #1 flip() example</strong></p>
    <pre class="php-code">
      <?php
      $input = array("oranges", "apples", "pears");
      $flipped = flip($input);

      print_r($flipped);
      ?>
    </pre>

    <div>The above example will output:</div>
    <pre class="output">
      Array
      (
          [oranges] => 0
          [apples] => 1
          [pears] => 2
      )
    </pre>

    <p><strong>Example #2 flip() example : collision</strong></p>
    <pre class="php-code">
      <?php
      $input = array("a" => 1, "b" => 1, "c" => 2);
      $flipped = flip($input);
      
      print_r($flipped);
      ?>
    </pre>

    <div>The above example will output:</div>
    <pre class="output">
      Array
      (
          [1] => b
          [2] => c
      )
    </pre>
  </div>
</div>
</body>
