<h1>userAssocDiff</h1>

 <div>
  <p>
   Compares <code>array1</code> against <code>array2</code> and
   returns the difference. Unlike <span><a href="function.array-diff.php">array_diff()</a></span> the array
   keys are used in the comparison.
  </p>
  <p>
   Unlike <span><a href="function.array-diff-assoc.php">array_diff_assoc()</a></span> an user supplied callback
   function is used for the indices comparison, not internal function.
  </p>
 </div>

 <div>
  <h3>Parameters</h3>
  <p>
   <dl>
     <dt><code>array1</code></dt>
     <dd><p>The array to compare from</p></dd>

     <dt><code>array2</code></dt>
     <dd><p>An array to compare against</p></dd>

     <dt><code>...</code></dt>
     <dd><p>More arrays to compare against</p></dd>

     <dt><code>key_compare_func</code></dt>
     <dd><p>The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second.
      </p>
        </dd>
   </dl>
  </p>
 </div>

 <div>
  <h3>Return Values</h3>
  <p>
   Returns an <span><a href="language.types.array.php">array</a></span> containing all the entries from
   <code>array1</code> that are not present in any of the other arrays.
  </p>
 </div>

 <div class="examples">
  <p>
   <div>
    <p><strong>Example #1 <span><strong>userAssocDiff()</strong></span> example</strong></p>
    <div><p>
     The <em>&quot;a&quot; =&gt; &quot;green&quot;</em>
     pair is present in both arrays and thus it is not in the output from the
     function. Unlike this, the pair <em>0 =&gt; &quot;red&quot;</em>
     is in the output because in the second argument <em>&quot;red&quot;</em>
     has key which is <em>1</em>.
    </p></div>
    <div>
<div><code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #0000BB">key_compare_func</span><span style="color: #007700">(</span><span style="color: #0000BB">$a</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$b</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #0000BB">$a&nbsp;</span><span style="color: #007700">===&nbsp;</span><span style="color: #0000BB">$b</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">0</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(</span><span style="color: #0000BB">$a&nbsp;</span><span style="color: #007700">&gt;&nbsp;</span><span style="color: #0000BB">$b</span><span style="color: #007700">)?&nbsp;</span><span style="color: #0000BB">1</span><span style="color: #007700">:-</span><span style="color: #0000BB">1</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #0000BB">$array1&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"a"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"green"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"b"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"brown"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"c"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"blue"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"red"</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">$array2&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"a"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"green"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"yellow"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"red"</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">$result&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">userAssocDiff</span><span style="color: #007700">(</span><span style="color: #0000BB">$array1</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$array2</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"key_compare_func"</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">print_r</span><span style="color: #007700">(</span><span style="color: #0000BB">$result</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">?&gt;</span>
</span>
</code></div>
    </div>

    <div><p>The above example will output:</p></div>
    <div>
<div><pre>
Array
(
    [b] =&gt; brown
    [c] =&gt; blue
    [0] =&gt; red
)
</pre></div>
    </div>
    <div><p>
     The equality of 2 indices is checked by the user supplied callback function.
    </p></div>
   </div>
  </p>
 </div>

 <div>
  <blockquote><p><strong>Note</strong>: 
   <p>
    This function only checks one dimension of a n-dimensional
    array. Of course you can check deeper dimensions by using, for example,
    <em>userAssocDiff($array1[0], $array2[0], &quot;key_compare_func&quot;);</em>.
   </p>
  </p></blockquote>
 </div>
