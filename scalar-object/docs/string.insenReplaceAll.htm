<html>
<head>
  <script src="jquery-2.0.3.min.js"></script>
  <script src="jquery.snippet.min.js"></script>
  <script src="individual.js"></script>
  <link rel="stylesheet" href="jquery.snippet.min.css"/>
  <link rel="stylesheet" href="inject.css"/>
  <link rel="stylesheet" href="individual.css"/>
</head>
<body>
<div class="short-description">
  <code>insenReplaceAll( mixed <var>$search</var>, mixed <var>$replace</var> ): mixed</code>
  <p>
    Context: string.<br/>
    Alias of <a href="http://php.net/manual/en/function.str-ireplace.php">str_ireplace</a>.<br/>
    Replace all case-insensitive occurrences of the search string with the replacement string.
  </p>
</div>
<div class="ajax-area">
  <h1>insenReplaceAll</h1>

  <div>
    This function returns a string or an array with all occurrences of <var>$search</var>
    in <var>$scalarObject->val</var> (ignoring case) replaced with the given <var>$replace</var>
    value.  If you don't need fancy replacing rules, you should generally use this function
    instead of <a href="function.preg-replace.php">preg_replace()</a> with the <em>i</em> modifier.
  </div>

  <div>
    <h3>Parameters</h3>
    <p>
      If <var>$search</var> and <var>$replace</var> are arrays, then <strong>insenReplaceAll()</strong>
      takes a value from each array and uses them to search and replace on <var>$scalarObject->val</var>.
      If <var>$replace</var> has fewer values than <var>$search</var>, then an empty string is used for
      the rest of replacement values. If <var>$search</var> is an array and <var>$replace</var> is a
      string, then this replacement string is used for every value of <var>$search</var>. The converse
      would not make sense, though.
    </p>
    <p>
      If <var>$search</var> or <var>$replace</var>
      are arrays, their elements are processed first to last.
    </p>
    <dl>
      <dt>$search</dt>
      <dd>
        The value being searched for, otherwise known as the <em>needle</em>.
        An array may be used to designate multiple needles.
      </dd>

      <dt>$replace</dt>
      <dd>
        The replacement value that replaces found <var>$search</var>
        values. An array may be used to designate multiple replacements.
      </dd>
    </dl>
  </div>

  <div>
    <h3>Return Values</h3>
    <p>Returns a string or an array of replacements.</p>
  </div>

  <div class="examples">
    <p><strong>Example #1 insenReplaceAll() example</strong></p>
    <pre class="php-code">
      <?php
      $bodytag = insenReplaceAll("%body%", "black", "&lt;body text=%BODY%>");
      ?>
    </pre>
  </div>

  <blockquote><strong>Note</strong>:This function is binary-safe.</blockquote>

  <div class="caution">
    <strong>Caution</strong>
    <h1>Replacement order gotcha</h1>
    <p>
      Because <strong>insenReplaceAll()</strong> replaces left to right, it might
      replace a previously inserted value when doing multiple replacements.
      Example #2 in the <a href="function.str-replace.php">str_replace()</a> documentation
      demonstrates how this may affect you in practice.
    </p>
  </div>
</div>
</body>
