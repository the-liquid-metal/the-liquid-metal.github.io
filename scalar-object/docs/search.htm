<h1>search</h1>
 <div>
  <p>
   Searches <code>haystack</code> for <code>needle</code>.
  </p>
 </div>

 <div>
  <h3>Parameters</h3>
  <p>
   <dl>
     <dt><code>needle</code></dt>
     <dd><p>The searched value.
      </p>
      <blockquote><p><strong>Note</strong>: 
       <p>
        If <code>needle</code> is a string, the comparison is done
        in a case-sensitive manner.
       </p>
      </p></blockquote>
     </dd>

     <dt><code>haystack</code></dt>
     <dd><p>The array.</p></dd>

     <dt><code>strict</code></dt>
     <dd><p>If the third parameter <code>strict</code> is set to <strong><code>TRUE</code></strong>
       then the <span><strong>search()</strong></span> function will search for
       <em>identical</em> elements in the
       <code>haystack</code>. This means it will also check the
       <a href="language.types.php">types</a> of the
       <code>needle</code> in the <code>haystack</code>,
       and objects must be the same instance.</p></dd>
   </dl>
  </p>
 </div>

 <div>
  <h3>Return Values</h3>
  <p>
   Returns the key for <code>needle</code> if it is found in the
   array, <strong><code>FALSE</code></strong> otherwise.
  </p>
  <p>
   If <code>needle</code> is found in <code>haystack</code>
   more than once, the first matching key is returned. To return the keys for
   all matching values, use <span><a href="function.array-keys.php">array_keys()</a></span> with the optional
   <code>search_value</code> parameter instead.
  </p>
  <div class="warning"><strong class="warning">Warning</strong><p>This function may
return Boolean <strong><code>FALSE</code></strong>, but may also return a non-Boolean value which
evaluates to <strong><code>FALSE</code></strong>. Please read the section on <a href="language.types.boolean.php">Booleans</a> for more
information. Use <a href="language.operators.comparison.php">the ===
operator</a> for testing the return value of this
function.</p></div>
 </div>

 <div class="examples">
  <p>
   <div>
    <p><strong>Example #1 <span><strong>search()</strong></span> example</strong></p>
    <div>
<div><code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br />$array&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #0000BB">0&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'blue'</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">1&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'red'</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">2&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'green'</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">3&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">'red'</span><span style="color: #007700">);<br /><br /></span><span style="color: #0000BB">$key&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">search</span><span style="color: #007700">(</span><span style="color: #DD0000">'green'</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$array</span><span style="color: #007700">);&nbsp;</span><span style="color: #FF8000">//&nbsp;$key&nbsp;=&nbsp;2;<br /></span><span style="color: #0000BB">$key&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">search</span><span style="color: #007700">(</span><span style="color: #DD0000">'red'</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$array</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;$key&nbsp;=&nbsp;1;<br /></span><span style="color: #0000BB">?&gt;</span>
</span>
</code></div>
    </div>

   </div>
  </p>
 </div>