<h1>userIntersect</h1>
 <div>Computes the intersection of arrays, compares data by a callback function.</div>

 <div>
  <h3>Parameters</h3>
   <dl>
     <dt>array1</dt>
     <dd>The first array.</dd>

     <dt>array2</dt>
     <dd>The second array.</dd>

     <dt>value_compare_func</dt>
     <dd>The comparison function must return an integer less than, equal to, or greater than zero if
       the first argument is considered to be respectively less than, equal to, or greater than the second.</dd>
   </dl>
 </div>

 <div>
  <h3>Return Values</h3>
  <p>Returns an array containing all the values of <code>array1</code> that are present in all the arguments.</p>
 </div>

 <div class="examples">
    <p><strong>Example #1 userIntersect() example</strong></p>
<pre class="php-code">&lt;?php
$array1 = array("a" => "green", "b" => "brown", "c" => "blue", "red");
$array2 = array("a" => "GREEN", "B" => "brown", "yellow", "red");

print_r(userIntersect($array1, $array2, "strcasecmp"));
?></pre>
    <div>The above example will output:</div>
<pre>
Array
(
    [a] => green
    [b] => brown
    [0] => red
)
</pre>
 </div>