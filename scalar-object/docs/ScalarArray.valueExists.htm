<html>
<head>
    <script src="jquery-2.0.3.min.js"></script>
    <script src="jquery.snippet.min.js"></script>
    <script src="individual.js"></script>
    <link rel="stylesheet" href="jquery.snippet.min.css"/>
    <link rel="stylesheet" href="inject.css"/>
    <link rel="stylesheet" href="individual.css"/>
</head>
<body>
<div class="ajax-area">
    <h1>valueExists</h1>

    <div class="short-description">
        <code>valueExists (mixed <var>$needle</var>, bool <var>$strict</var> = false): bool</code>
        <p>
            Checks if a value exists.<br/><br/>
            see <a target="_blank" href="http://php.net/manual/en/function.in-array.php">in_array</a>.<br/>
        </p>
    </div>

    <div>
        Searches <var>$scalarObject->val</var> for <var>$needle</var> using loose comparison
        unless <var>$strict</var> is set.
    </div>

    <div>
        <h3>Parameters</h3>
        <dl>
            <dt>$needle</dt>
            <dd>
                <p>The searched value.</p>
                <blockquote>
                    <strong>Note</strong>: If <var>$needle</var> is a string,
                    the comparison is done in a case-sensitive manner.
                </blockquote>
            </dd>

            <dt>$strict</dt>
            <dd>
                If it is set to <code>TRUE</code> then
                the <strong>inArray()</strong> function will also check the types of the
                <var>$needle</var> in the <var>$scalarObject->val</var>.
            </dd>
        </dl>
    </div>

    <div>
        <h3>Return Values</h3>
        <p>
            Returns <code>TRUE</code> if <var>$needle</var> is found in the array,
            <code>FALSE</code> otherwise.
        </p>
    </div>

    <div class="examples">
        <pre class="php-code">
            $os = ["Mac", "NT", "Irix", "Linux"];
            if (inArray("Irix", $os)) {
                echo "Got Irix";
            }
            if (inArray("mac", $os)) {
                echo "Got mac";
            }
        </pre>
        <div>
            The second condition fails because <strong>inArray()</strong>
            is case-sensitive, so the program above will display:
        </div>
        <pre class="output">Got Irix</pre>

        <pre class="php-code">
            $a = ["1.10", 12.4, 1.13];

            if (inArray("12.4", $a, true)) {
                echo "'12.4' found with strict check\n";
            }

            if (inArray(1.13, $a, true)) {
                echo "1.13 found with strict check\n";
            }
        </pre>
        <div>The above example will output:</div>
        <pre class="output">1.13 found with strict check</pre>

        <pre class="php-code">
            $a = [
                ["p", "h"],
                ["p", "r"],
                "o"
            ];

            if (inArray(["p", "h"], $a)) {
                echo "'ph' was found\n";
            }

            if (inArray(["f", "i"], $a)) {
                echo "'fi' was found\n";
            }

            if (inArray("o", $a)) {
                echo "'o' was found\n";
            }
        </pre>

        <div>The above example will output:</div>
        <pre class="output">
            'ph' was found
            'o' was found
        </pre>
    </div>
</div>
</body>
