<html>
<head>
  <script src="jquery-2.0.3.min.js"></script>
  <script src="jquery.snippet.min.js"></script>
  <script src="individual.js"></script>
  <link rel="stylesheet" href="jquery.snippet.min.css"/>
  <link rel="stylesheet" href="inject.css"/>
  <link rel="stylesheet" href="individual.css"/>
</head>
<body>
<div class="short-description">
    <code>firstOccurInsenPosition( string <var>$needle</var>, int <var>$offset</var> ): mixed</code>
    <p>
      Context: string.<br/>
      Alias of <a href="http://php.net/manual/en/function.stripos.php">stripos</a>.<br/>
      Find the position of the first occurrence of a case-insensitive substring.
    </p>
</div>
<div class="ajax-area">
  <h1>firstOccurInsenPosition</h1>

  <div>
    <p>
      Find the numeric position of the first occurrence of
      <var>$needle</var> in the <var>$scalarObject->val</var> string.
    </p>
    <p>
      Unlike the <a href="firstOccurPosition.htm">firstOccurPosition()</a>,
      <strong>firstOccurInsenPosition()</strong> is case-insensitive.
    </p>
  </div>

  <div>
    <h3>Parameters</h3>
    <dl>
      <dt>$needle</dt>
      <dd>
        <p>Note that the <var>$needle</var> may be a string of one or more characters.</p>
        <p>
          If <var>$needle</var> is not a string, it is converted to
          an integer and applied as the ordinal value of a character.
        </p>
      </dd>

      <dt>$offset</dt>
      <dd>
        If specified, search will start this number of characters counted from the
        beginning of the string. Unlike <a href="lastOccurPosition.htm">lastOccurPosition()</a> and
        <a href="lastOccurInsenPosition.htm">lastOccurInsenPosition()</a>, the offset cannot be negative.
      </dd>
    </dl>
  </div>

  <div>
    <h3>Return Values</h3>
    <p>
      Returns the position of where the needle exists relative to the beginnning of
      the <var>$scalarObject->val</var> string (independent of offset).
      Also note that string positions start at 0, and not 1.
    </p>
    <p>Returns <code>FALSE</code> if the needle was not found.</p>

    <div class="warning">
      <strong>Warning</strong><br/>
      This function may return Boolean <code>FALSE</code>, but may also return a non-Boolean
      value which evaluates to <code>FALSE</code>. Please read the section on boolean for more
      information. Use the <code>===</code> operator for testing the return value of this function.
    </div>
  </div>

  <div class="examples">
    <p><strong>Example #1 firstOccurInsenPosition() examples</strong></p>
    <pre class="php-code">
      <?php
      $findme    = 'a';
      $mystring1 = 'xyz';
      $mystring2 = 'ABC';

      $pos1 = firstOccurInsenPosition($mystring1, $findme);
      $pos2 = firstOccurInsenPosition($mystring2, $findme);

      // Nope, 'a' is certainly not in 'xyz'
      if ($pos1 === false) {
          echo "The string '$findme' was not found in the string '$mystring1'";
      }

      // Note our use of ===.  Simply == would not work as expected
      // because the position of 'a' is the 0th (first) character.
      if ($pos2 !== false) {
          echo "We found '$findme' in '$mystring2' at position $pos2";
      }
      ?>
    </pre>
  </div>

  <blockquote><strong>Note</strong>:This function is binary-safe.</blockquote>
</div>
</body>
