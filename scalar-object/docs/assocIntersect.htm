
 <div class="refnamediv">
  <h1 class="refname">assocIntersect</h1>
 </div>
 
 <div class="refsect1 description">
  <p class="simpara">
   <span><strong>assocIntersect()</strong></span> returns an array
   containing all the values of <code class="parameter">array1</code>
   that are present in all the arguments. Note that the keys are used in
   the comparison unlike in <span><a href="function.array-intersect.php" class="function">array_intersect()</a></span>.
  </p>
 </div>


 <div class="refsect1 parameters">
  <h3 class="title">Parameters</h3>
  <p class="para">
   <dl>

    
     <dt>
<code class="parameter">array1</code></dt>

     <dd>

      <p class="para">
       The array with master values to check.
      </p>
     </dd>

    
    
     <dt>
<code class="parameter">array2</code></dt>

     <dd>

      <p class="para">
       An array to compare values against.
      </p>
     </dd>

    
    
     <dt>
<code class="parameter">...</code></dt>

     <dd>

      <p class="para">
       A variable list of arrays to compare.
      </p>
     </dd>

    
   </dl>

  </p>
 </div>


 <div class="refsect1 returnvalues">
  <h3 class="title">Return Values</h3>
  <p class="para">
   Returns an associative array containing all the values in 
   <code class="parameter">array1</code> that are present in all of the arguments.
  </p>
 </div>


 <div class="refsect1 examples">
  <p class="para">
   <div class="example">
    <p><strong>Example #1 <span><strong>assocIntersect()</strong></span> example</strong></p>
    <div>
<div><code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br />$array1&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"a"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"green"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"b"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"brown"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"c"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"blue"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"red"</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">$array2&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"a"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"green"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"b"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"yellow"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"blue"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"red"</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">$result_array&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">assocIntersect</span><span style="color: #007700">(</span><span style="color: #0000BB">$array1</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$array2</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">print_r</span><span style="color: #007700">(</span><span style="color: #0000BB">$result_array</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">?&gt;</span>
</span>
</code></div>
    </div>

    <div><p>The above example will output:</p></div>
    <div>
<div><pre>
Array
(
    [a] =&gt; green
)
</pre></div>
    </div>
   </div>
  </p>
  <p class="simpara">
   In our example you see that only the pair <em>&quot;a&quot; =&gt;
   &quot;green&quot;</em> is present in both arrays and thus is returned.
   The value <em>&quot;red&quot;</em> is not returned because in
   <var class="varname"><var class="varname">$array1</var></var> its key is <em>0</em> while
   the key of &quot;red&quot; in <var class="varname"><var class="varname">$array2</var></var> is
   <em>1</em>, and the key <em>&quot;b&quot;</em> is not returned
   because its values are different in each array.
  </p>
  <p class="simpara">
   The two values from the <em>key =&gt; value</em> pairs are
   considered equal only if
   <em>(string) $elem1 === (string) $elem2 </em>. In other words
   a strict type check is executed so the string representation must be
   the same.
   
  </p>
 </div>
