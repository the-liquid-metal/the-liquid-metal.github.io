<h1>firstOccurSubstr</h1>

 <div>
  <p>
   Returns part of <code>haystack</code> string starting from and including the first
   occurrence of <code>needle</code> to the end of
   <code>haystack</code>.
  </p>
  <blockquote><strong>Note</strong>:
    This function is case-sensitive. For case-insensitive searches, use
    <a href="function.stristr.php">stristr()</a>.
   </blockquote>
  <blockquote><strong>Note</strong>:
    If you only want to determine if a particular <code>needle</code>
    occurs within <code>haystack</code>, use the faster and less memory
    intensive function <a href="function.strpos.php">strpos()</a> instead.
   </blockquote>
 </div>

 <div>
  <h3>Parameters</h3>
   <dl>
     <dt>haystack</dt>
     <dd>The input string.</dd>

     <dt>needle</dt>
     <dd>If <code>needle</code> is not a string, it is converted to
       an integer and applied as the ordinal value of a character.</dd>

     <dt>before_needle</dt>
     <dd>If <code>TRUE</code>, <strong>firstOccurSubstr()</strong> returns
       the part of the <code>haystack</code> before the first
       occurrence of the <code>needle</code> (excluding the needle).</dd>
   </dl>
 </div>

 <div>
  <h3>Return Values</h3>
  <p>
   Returns the portion of string, or <code>FALSE</code> if <code>needle</code>
   is not found.
  </p>
 </div>

 <div class="examples">
    <p><strong>Example #1 firstOccurSubstr() example</strong></p>
<pre class="php-code">
<?php
$email  = 'name@example.com';
$domain = firstOccurSubstr($email, '@');
echo $domain; // prints @example.com

$user = firstOccurSubstr($email, '@', true); // As of PHP 5.3.0
echo $user; // prints name
?>
</pre>
 </div>
