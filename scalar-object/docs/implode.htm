
 <div class="refnamediv">
  <h1 class="refname">implode</h1>
 </div>
 
 <div class="refsect1 description" id="refsect1-function.implode-description">
  <h3 class="title">Description</h3>
  <p class="para rdfs-comment">
   Join array elements with a <code class="parameter">glue</code> string.
  </p>
  <blockquote class="note"><p><strong class="note">Note</strong>: 
   <p class="para">
    <span class="function"><strong>implode()</strong></span> can, for historical reasons, accept
    its parameters in either order. For consistency with
    <span class="function"><a href="function.explode.php" class="function">explode()</a></span>, however, it may be less confusing
    to use the documented order of arguments.
   </p>
  </p></blockquote>
 </div>


 <div class="refsect1 parameters" id="refsect1-function.implode-parameters">
  <h3 class="title">Parameters</h3>
  <p class="para">
   <dl>

    
     <dt>
<code class="parameter">glue</code></dt>

     <dd>

      <p class="para">
       Defaults to an empty string.
      </p>
     </dd>

    
    
     <dt>
<code class="parameter">pieces</code></dt>

     <dd>

      <p class="para">
       The array of strings to implode.
      </p>
     </dd>

    
   </dl>

  </p>
 </div>


 <div class="refsect1 returnvalues" id="refsect1-function.implode-returnvalues">
  <h3 class="title">Return Values</h3>
  <p class="para">
   Returns a string containing a string representation of all the array
   elements in the same order, with the glue string between each element.
  </p>
 </div>


 <div class="refsect1 examples" id="refsect1-function.implode-examples">
  <p class="para">
   <div class="example" id="example-5379">
    <p><strong>Example #1 <span class="function"><strong>implode()</strong></span> example</strong></p>
    <div class="example-contents">
<div class="phpcode"><code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br /><br />$array&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'lastname'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'email'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'phone'</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">$comma_separated&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">implode</span><span style="color: #007700">(</span><span style="color: #DD0000">","</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$array</span><span style="color: #007700">);<br /><br />echo&nbsp;</span><span style="color: #0000BB">$comma_separated</span><span style="color: #007700">;&nbsp;</span><span style="color: #FF8000">//&nbsp;lastname,email,phone<br /><br />//&nbsp;Empty&nbsp;string&nbsp;when&nbsp;using&nbsp;an&nbsp;empty&nbsp;array:<br /></span><span style="color: #0000BB">var_dump</span><span style="color: #007700">(</span><span style="color: #0000BB">implode</span><span style="color: #007700">(</span><span style="color: #DD0000">'hello'</span><span style="color: #007700">,&nbsp;array()));&nbsp;</span><span style="color: #FF8000">//&nbsp;string(0)&nbsp;""<br /><br /></span><span style="color: #0000BB">?&gt;</span>
</span>
</code></div>
    </div>

   </div>   
  </p>
 </div>


 <div class="refsect1 notes" id="refsect1-function.implode-notes">
  <blockquote class="note"><p><strong class="note">Note</strong>: <span class="simpara">This function is
binary-safe.</span></p></blockquote>
 </div>
