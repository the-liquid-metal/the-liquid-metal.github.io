<h1>nlToBr</h1>

 <div>
   Returns <code>string</code> with '&lt;br />' or 
   '&lt;br>' inserted before all newlines (<em>\r\n</em>,
   <em>\n\r</em>, <em>\n</em> and <em>\r</em>).
 </div>

 <div>
  <h3>Parameters</h3>
   <dl>
     <dt>string</dt>
     <dd>The input string.</dd>

     <dt>is_xhtml</dt>
     <dd>Whether to use XHTML compatible line breaks or not.</dd>
   </dl>
 </div>

 <div>
  <h3>Return Values</h3>
  <p>Returns the altered string.</p>
 </div>

 <div class="examples">
    <p><strong>Example #1 Using <strong>nlToBr()</strong></strong></p>
<pre class="php-code">
<?php
echo nlToBr("foo isn't\n bar");
?>
</pre>
    <div>The above example will output:</div>
<pre class="output">
foo isn't&lt;br />
 bar
</pre>

    <p><strong>Example #2 Generating valid HTML markup using the <code>is_xhtml</code> parameter</strong></p>
<pre class="php-code">
<?php
echo nlToBr("Welcome\r\nThis is my HTML document", false);
?>
</pre>
    <div>The above example will output:</div>
<pre class="output">
Welcome&lt;br>
This is my HTML document
</pre>

    <p><strong>Example #3 Various newline separators</strong></p>
<pre class="php-code">
<?php
$string = "This\r\nis\n\ra\nstring\r";
echo nlToBr($string);
?>
</pre>
    <div>The above example will output:</div>
<pre class="output">
This&lt;br />
is&lt;br />
a&lt;br />
string&lt;br />
</pre>
 </div>
