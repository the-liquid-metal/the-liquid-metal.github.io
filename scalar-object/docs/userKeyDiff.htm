
 <div>
  <h1>userKeyDiff</h1>
 </div>

 <div>
  <p>
   Compares the keys from <code>array1</code> against the keys
   from <code>array2</code> and returns the difference.
   This function is like <span><a href="function.array-diff.php" class="function">array_diff()</a></span> except the
   comparison is done on the keys instead of the values.
  </p>
  <p>
   Unlike <span><a href="function.array-diff-key.php" class="function">array_diff_key()</a></span> a user supplied callback
   function is used for the indices comparison, not internal function.
  </p>
 </div>

 <div class="parameters">
  <h3>Parameters</h3>
  <p>
   <dl>

     <dt>
<code>array1</code></dt>

     <dd>

      <p>
       The array to compare from
      </p>
     </dd>

     <dt>
<code>array2</code></dt>

     <dd>

      <p>
       An array to compare against
      </p>
     </dd>

     <dt>
<code>...</code></dt>

     <dd>

      <p>
       More arrays to compare against
      </p>
     </dd>

     <dt>
<code>key_compare_func</code></dt>

     <dd>

      <p>
       The comparison function must return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second.
      </p>
        </dd>

   </dl>

  </p>
 </div>

 <div class="returnvalues">
  <h3>Return Values</h3>
  <p>
   Returns an <span><a href="language.types.array.php" class="type array">array</a></span> containing all the entries from
   <code>array1</code> that are not present in any of the other arrays.
  </p>
 </div>

 <div class="examples">
  <p>
   <div>
    <p><strong>Example #1 <span><strong>userKeyDiff()</strong></span> example</strong></p>
    <div>
<div><code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #0000BB">key_compare_func</span><span style="color: #007700">(</span><span style="color: #0000BB">$key1</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$key2</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #0000BB">$key1&nbsp;</span><span style="color: #007700">==&nbsp;</span><span style="color: #0000BB">$key2</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">0</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if&nbsp;(</span><span style="color: #0000BB">$key1&nbsp;</span><span style="color: #007700">&gt;&nbsp;</span><span style="color: #0000BB">$key2</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">1</span><span style="color: #007700">;<br />&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;-</span><span style="color: #0000BB">1</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #0000BB">$array1&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'blue'&nbsp;&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #0000BB">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'red'&nbsp;&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #0000BB">2</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'green'&nbsp;&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #0000BB">3</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'purple'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #0000BB">4</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">$array2&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">'green'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #0000BB">5</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'blue'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #0000BB">6</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'yellow'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #0000BB">7</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'cyan'&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #0000BB">8</span><span style="color: #007700">);<br /><br /></span><span style="color: #0000BB">var_dump</span><span style="color: #007700">(</span><span style="color: #0000BB">userKeyDiff</span><span style="color: #007700">(</span><span style="color: #0000BB">$array1</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$array2</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'key_compare_func'</span><span style="color: #007700">));<br /></span><span style="color: #0000BB">?&gt;</span>
</span>
</code></div>
    </div>

    <div><p>The above example will output:</p></div>
    <div>
<div><pre>
array(2) {
  [&quot;red&quot;]=&gt;
  int(2)
  [&quot;purple&quot;]=&gt;
  int(4)
}
</pre></div>
    </div>
   </div>
  </p>
 </div>

 <div>
  <blockquote><p><strong>Note</strong>: 
   <p>
    This function only checks one dimension of a n-dimensional
    array. Of course you can check deeper dimensions by using
    <em>userKeyDiff($array1[0], $array2[0], &#039;callback_func&#039;);</em>.
   </p>
  </p></blockquote>
 </div>
