<html>
<head>
  <script src="jquery-2.0.3.min.js"></script>
  <script src="jquery.snippet.min.js"></script>
  <script src="individual.js"></script>
  <link rel="stylesheet" href="jquery.snippet.min.css"/>
  <link rel="stylesheet" href="inject.css"/>
  <link rel="stylesheet" href="individual.css"/>
</head>
<body>
<div class="ajax-area">
  <h1>recursiveMerge</h1>

  <div class="short-description">
    <code>recursiveMerge( array <var>$array2</var>, array <var>...</var> ): array</code>
    <p>
      Context: array.<br/>
      Alias of <a href="http://php.net/manual/en/function.array-merge-recursive.php">array_merge_recursive</a>.<br/>
      Merge two or more arrays recursively.
    </p>
  </div>

  <div>
    <p>
      <strong>recursiveMerge()</strong> merges the elements of
      one or more arrays together so that the values of one are appended
      to the end of the previous one.  It returns the resulting array.
    </p>
    <p>
      If the input arrays have the same string keys, then the values for
      these keys are merged together into an array, and this is done
      recursively, so that if one of the values is an array itself, the
      function will merge it with a corresponding entry in another array
      too. If, however, the arrays have the same numeric key, the later
      value will not overwrite the original value, but will be appended.
    </p>
  </div>

  <div>
    <h3>Parameters</h3>
    <dl>
      <dt>$array2</dt>
      <dd>array to merge.</dd>

      <dt>...</dt>
      <dd>Variable list of arrays to recursively merge.</dd>
    </dl>
  </div>

  <div>
    <h3>Return Values</h3>
    <p>An array of values resulted from merging the arguments together.</p>
  </div>

  <div class="examples">
    <p><strong>Example #1 recursiveMerge() example</strong></p>
    <pre class="php-code">
      <?php
      $ar1 = array("color" => array("favorite" => "red"), 5);
      $ar2 = array(10, "color" => array("favorite" => "green", "blue"));
      $result = recursiveMerge($ar1, $ar2);
      print_r($result);
      ?>
    </pre>

    <div>The above example will output:</div>
    <pre class="output">
      Array
      (
          [color] => Array
              (
                  [favorite] => Array
                      (
                          [0] => red
                          [1] => green
                      )
                  [0] => blue
              )
          [0] => 5
          [1] => 10
      )
    </pre>
  </div>
</div>
</body>
