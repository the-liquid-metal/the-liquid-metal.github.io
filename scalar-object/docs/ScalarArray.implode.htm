<html>
<head>
    <script src="jquery-2.0.3.min.js"></script>
    <script src="jquery.snippet.min.js"></script>
    <script src="individual.js"></script>
    <link rel="stylesheet" href="jquery.snippet.min.css"/>
    <link rel="stylesheet" href="inject.css"/>
    <link rel="stylesheet" href="individual.css"/>
</head>
<body>
<div class="ajax-area">
    <h1>implode</h1>

    <div class="short-description">
        <code>implode( string <var>$glue</var> ): string</code>
        <p>
            Alias of <a href="http://php.net/manual/en/function.implode.php">implode</a>.<br/>
            Join elements with a string.
        </p>
    </div>

    <div>
        <p>Join array elements with a <var>$glue</var> string.</p>
        <blockquote>
            <strong>Note</strong>: <strong>implode()</strong> can, for historical reasons, accept its
            parameters in either order. For consistency with <a href="explode.htm">explode()</a>,
            however, it may be less confusing to use the documented order of arguments.
        </blockquote>
    </div>

    <div>
        <h3>Parameters</h3>
        <dl>
            <dt>$glue</dt>
            <dd>Defaults to an empty string.</dd>
        </dl>
    </div>

    <div>
        <h3>Return Values</h3>
        <p>
            A string containing a string representation of all the <var>$scalarObject->val</var>
            elements in the same order, with the glue string between each element.
        </p>
    </div>

    <div class="examples">
        <p><strong>Example #1 implode() example</strong></p>
        <pre class="php-code">
            $array = ["lastname", "email", "phone"];
            $comma_separated = implode(",", $array);

            echo $comma_separated; // lastname,email,phone

            // Empty string when using an empty array:
            var_dump(implode("hello", [])); // string(0) ""
        </pre>
    </div>

    <blockquote><strong>Note</strong>: This function is binary-safe.</blockquote>
</div>
</body>
