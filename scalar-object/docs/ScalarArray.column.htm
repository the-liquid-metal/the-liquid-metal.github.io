<html>
<head>
    <script src="jquery-2.0.3.min.js"></script>
    <script src="jquery.snippet.min.js"></script>
    <script src="individual.js"></script>
    <link rel="stylesheet" href="jquery.snippet.min.css"/>
    <link rel="stylesheet" href="inject.css"/>
    <link rel="stylesheet" href="individual.css"/>
</head>
<body>
<div class="ajax-area">
    <h1>column</h1>

    <div class="short-description">
        <code>column (mixed <var>$columnKey</var>, mixed <var>$indexKey</var> = null): ScalarArray|ObjectArray</code>
        <p>
            Returns the values from a single column.<br/><br/>
            see <a target="_blank" href="http://php.net/manual/en/function.array-column.php">array_column</a>.<br/>
        </p>
    </div>

    <div>
        <strong>column()</strong> returns the values from a single column of
        the <em>internal array</em>, identified by the
        <var>$columnKey</var>. Optionally, you may provide an
        <var>$indexKey</var> to index the values in the returned array by
        the values from the <var>$indexKey</var> column in the input
        array.
    </div>

    <h3>Parameters</h3>
    <dl>
        <dt>$columnKey</dt>
        <dd>
            The column of values to return. This value may be the integer key of the
            column you wish to retrieve, or it may be the string key name for an
            associative array. It may also be <code>NULL</code> to return complete arrays
            (useful together with <var>$indexKey</var> to reindex the array).
        </dd>

        <dt>$indexKey</dt>
        <dd>
            The column to use as the index/keys for the returned array. This value
            may be the integer key of the column, or it may be the string key name.
        </dd>
    </dl>

    <h3>Return Values</h3>
    <p>An array of values representing a single column from the <em>internal array</em>.</p>

    <pre class="php-code">
        $sa = new ScalarArray("array", false, [
            ["id" => 2135, "first_name" => "John",  "last_name" => "Doe"],
            ["id" => 3245, "first_name" => "Sally", "last_name" => "Smith"],
            ["id" => 5342, "first_name" => "Jane",  "last_name" => "Jones"],
            ["id" => 5623, "first_name" => "Peter", "last_name" => "Doe"]
        ]);
        $sa->column("first_name");      // output: ["John", "Sally", "Jane", "Peter"]
        $sa->column("last_name", "id"); // output: [2135 => "Doe", 3245 => "Smith", 5342 => "Jones", 5623 => "Doe"]
    </pre>
</div>
</body>
