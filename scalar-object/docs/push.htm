
 <div class="refnamediv">
  <h1 class="refname">push</h1>
 </div>
 <div class="refsect1 description" id="refsect1-function.array-push-description">
  <h3 class="title">Description</h3>
  <p class="para rdfs-comment">
   <span class="function"><strong>push()</strong></span> treats <code class="parameter">array</code> as a
   stack, and pushes the passed variables onto the end of
   <code class="parameter">array</code>. The length of <code class="parameter">array</code>
   increases by the number of variables pushed. Has the same effect as:
   <div class="example-contents">
<div class="phpcode"><code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br />$array</span><span style="color: #007700">[]&nbsp;=&nbsp;</span><span style="color: #0000BB">$var</span><span style="color: #007700">;<br /></span><span style="color: #0000BB">?&gt;</span>
</span>
</code></div>
   </div>

   repeated for each passed value.
  </p>
  <blockquote class="note"><p><strong class="note">Note</strong>: 
   <span class="simpara">
    If you use <span class="function"><strong>push()</strong></span> to add one element to the
    array it&#039;s better to use <em>$array[] = </em> because in that
    way there is no overhead of calling a function.
   </span>
  </p></blockquote>
  <blockquote class="note"><p><strong class="note">Note</strong>: 
   <span class="simpara">
    <span class="function"><strong>push()</strong></span> will raise a warning if the first
    argument is not an array. This differs from the
    <em>$var[]</em> behaviour where a new array is created.
   </span>
  </p></blockquote>
 </div>

 <div class="refsect1 parameters" id="refsect1-function.array-push-parameters">
  <h3 class="title">Parameters</h3>
  <p class="para">
   <dl>

    
     <dt>
<code class="parameter">array</code></dt>

     <dd>

      <p class="para">
       The input array.
      </p>
     </dd>

    
    
     <dt>
<code class="parameter">value1</code></dt>

     <dd>

      <p class="para">
       The first value to push onto the end of the <code class="parameter">array</code>.
      </p>
     </dd>

    
   </dl>

  </p>
 </div>

 <div class="refsect1 returnvalues" id="refsect1-function.array-push-returnvalues">
  <h3 class="title">Return Values</h3>
  <p class="para">
   Returns the new number of elements in the array.
  </p>
 </div>

 <div class="refsect1 examples" id="refsect1-function.array-push-examples">
  <p class="para">
   <div class="example" id="example-5517">
    <p><strong>Example #1 <span class="function"><strong>push()</strong></span> example</strong></p>
    <div class="example-contents">
<div class="phpcode"><code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br />$stack&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"orange"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"banana"</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">push</span><span style="color: #007700">(</span><span style="color: #0000BB">$stack</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"apple"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"raspberry"</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">print_r</span><span style="color: #007700">(</span><span style="color: #0000BB">$stack</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">?&gt;</span>
</span>
</code></div>
    </div>

    <div class="example-contents"><p>The above example will output:</p></div>
    <div class="example-contents screen">
<div class="cdata"><pre>
Array
(
    [0] =&gt; orange
    [1] =&gt; banana
    [2] =&gt; apple
    [3] =&gt; raspberry
)
</pre></div>
    </div>
   </div>
  </p>
 </div>