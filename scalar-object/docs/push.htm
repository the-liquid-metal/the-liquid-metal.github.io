<h1>push</h1>
 <div>
  <p>
   <strong>push()</strong> treats <code>array</code> as a
   stack, and pushes the passed variables onto the end of
   <code>array</code>. The length of <code>array</code>
   increases by the number of variables pushed. Has the same effect as:
   <pre><span style="color: #0000BB">&lt;?php<br />$array</span><span style="color: #007700">[]&nbsp;=&nbsp;</span><span style="color: #0000BB">$var</span><span style="color: #007700">;<br /></span><span style="color: #0000BB">?&gt;</span></pre>

   repeated for each passed value.
  </p>
  <blockquote><strong>Note</strong>:
    If you use <strong>push()</strong> to add one element to the
    array it&#039;s better to use <em>$array[] = </em> because in that
    way there is no overhead of calling a function.
   </blockquote>
  <blockquote><strong>Note</strong>:
    <strong>push()</strong> will raise a warning if the first
    argument is not an array. This differs from the
    <em>$var[]</em> behaviour where a new array is created.
   </blockquote>
 </div>

 <div>
  <h3>Parameters</h3>
  <p>
   <dl>
     <dt><code>array</code></dt>
     <dd>The input array.</dd>

     <dt><code>value1</code></dt>
     <dd>The first value to push onto the end of the <code>array</code>.</dd>
   </dl>
  </p>
 </div>

 <div>
  <h3>Return Values</h3>
  <p>
   Returns the new number of elements in the array.
  </p>
 </div>

 <div class="examples">
  <p>
   <div>
    <p><strong>Example #1 push() example</strong></p>
    <pre><span style="color: #0000BB">&lt;?php<br />$stack&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"orange"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"banana"</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">push</span><span style="color: #007700">(</span><span style="color: #0000BB">$stack</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"apple"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"raspberry"</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">print_r</span><span style="color: #007700">(</span><span style="color: #0000BB">$stack</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">?&gt;</span></pre>

    <div>The above example will output:</div>
<pre>
Array
(
    [0] =&gt; orange
    [1] =&gt; banana
    [2] =&gt; apple
    [3] =&gt; raspberry
)
</pre>
   </div>
  </p>
 </div>