<html>
<head>
  <script src="jquery-2.0.3.min.js"></script>
  <script src="jquery.snippet.min.js"></script>
  <script src="individual.js"></script>
  <link rel="stylesheet" href="jquery.snippet.min.css"/>
  <link rel="stylesheet" href="inject.css"/>
  <link rel="stylesheet" href="individual.css"/>
</head>
<body>
<div class="ajax-area">
  <h1>intersect</h1>

  <div class="short-description">
    <code>intersect( array <var>$array2</var>, <span>array <var>...</var> ): array</code>
    <p>
      Context: array.<br/>
      Alias of <a href="http://php.net/manual/en/function.array-intersect.php">array_intersect</a>.<br/>
      Computes the intersection.
    </p>
  </div>

  <div>
    <strong>intersect()</strong> returns an array containing all the values of
    <var>$scalarObject->val</var> that are present in all the arguments. Note
    that keys are preserved.
  </div>

  <div>
    <h3>Parameters</h3>
    <dl>
      <dt>$array2</dt>
      <dd>An array to compare values against.</dd>

      <dt>...</dt>
      <dd>A variable list of arrays to compare.</dd>
    </dl>
  </div>

  <div>
    <h3>Return Values</h3>
    <p>
      Array containing all of the values in <var>$scalarObject->val</var>
      whose values exist in all of the parameters.
    </p>
  </div>

  <div class="examples">
    <p><strong>Example #1 intersect() example</strong></p>
    <pre class="php-code">
      <?php
      $array1 = array("a" => "green", "red", "blue");
      $array2 = array("b" => "green", "yellow", "red");
      $result = intersect($array1, $array2);
      print_r($result);
      ?>
    </pre>
    <div>The above example will output:</div>
    <pre class="output">
      Array
      (
          [a] => green
          [0] => red
      )
    </pre>
  </div>

  <blockquote>
    <strong>Note</strong>: Two elements are considered equal if and only if <em>(string)
    $elem1 === (string) $elem2</em>. In words: when the string representation is the same.
  </blockquote>
</div>
</body>
