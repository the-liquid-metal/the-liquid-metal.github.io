<html>
<head>
    <script src="jquery-2.0.3.min.js"></script>
    <script src="jquery.snippet.min.js"></script>
    <script src="individual.js"></script>
    <link rel="stylesheet" href="jquery.snippet.min.css"/>
    <link rel="stylesheet" href="inject.css"/>
    <link rel="stylesheet" href="individual.css"/>
</head>
<body>
<div class="ajax-area">
    <h1>slice</h1>

    <div class="short-description">
        <code>slice (int <var>$offset</var>, int <var>$length</var> = null, bool <var>$preserveKeys</var> = false): static</code>
        <p>
            Extracts a slice.<br/><br/>
            see <a target="_blank" href="http://php.net/manual/en/function.array-slice.php">array_slice</a>.<br/>
        </p>
    </div>

    <div>
        <strong>slice()</strong> returns the sequence of elements
        from the array <em>internal array</em> as specified by the
        <var>$offset</var> and <code>length</code> parameters.
    </div>

    <h3>Parameters</h3>
    <dl>
        <dt>$offset</dt>
        <dd>
            If <var>$offset</var> is non-negative, the sequence will start at that
            offset in the <em>internal array</em>.  If <var>$offset</var> is negative,
            the sequence will start that far from the end of the <em>internal array</em>.
        </dd>

        <dt>$length</dt>
        <dd>
            If <code>length</code> is given and is positive, then the sequence will have up
            to that many elements in it. If the array is shorter than the <code>length</code>,
            then only the available array elements will be present. If <code>length</code>
            is given and is negative then the sequence will stop that many elements from the
            end of the array. If it is omitted, then the sequence will have everything from
            <var>$offset</var> up until the end of the <em>internal array</em>.
        </dd>

        <dt>$preserveKeys</dt>
        <dd>
            Note that <strong>slice()</strong> will reorder and reset the numeric array indices
            by default. You can change this behaviour by setting <var>$preserveKeys</var> to
            <code>TRUE</code>.
        </dd>
    </dl>

    <h3>Return Values</h3>
    <p>The slice.</p>

    <pre class="php-code">
        $input = ["a", "b", "c", "d", "e"];

        slice($input, 2);     // output: "c", "d", and "e"
        slice($input, -2, 1); // output: "d"
        slice($input, 0, 3);  // output: "a", "b", and "c"

        slice($input, 2, -1);       // output: [0 => "c", 1 => "d"]
        slice($input, 2, -1, true); // output: [2 => "c", 3 => "d"]
    </pre>
</div>
</body>
