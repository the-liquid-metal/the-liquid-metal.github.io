
 <div>
  <h1>stripSlashes</h1>
 </div>

 <div>
  <p>
   Un-quotes a quoted string.
  </p>
  <blockquote><p><strong>Note</strong>: 
   <p>
    If <a href="sybase.configuration.php#ini.magic-quotes-sybase" class="link">magic_quotes_sybase</a> is
    on, no backslashes are stripped off but two apostrophes are replaced by
    one instead.
   </p>
  </p></blockquote>
  <p>
   An example use of <span><strong>stripSlashes()</strong></span> is when the PHP
   directive <a href="info.configuration.php#ini.magic-quotes-gpc" class="link">magic_quotes_gpc</a>
   is <em>on</em> (it was on by default before PHP 5.4), and you aren&#039;t inserting
   this data into a place (such as a database) that requires escaping.
   For example, if you&#039;re simply outputting data straight from an HTML form.
  </p>
 </div>

 <div class="parameters">
  <h3>Parameters</h3>
  <p>
   <dl>

     <dt>
<code>str</code></dt>

     <dd>

      <p>
       The input string.
      </p>
     </dd>

   </dl>

  </p>
 </div>

 <div class="returnvalues">
  <h3>Return Values</h3>
  <p>
   Returns a string with backslashes stripped off.
   (<em>\&#039;</em> becomes <em>&#039;</em> and so on.)
   Double backslashes (<em>\\</em>) are made into a single
   backslash (<em>\</em>).
  </p>
 </div>

 <div class="examples">
  <p>
   <div>
    <p><strong>Example #1 A <span><strong>stripSlashes()</strong></span> example</strong></p>
    <div>
<div><code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br />$str&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #DD0000">"Is&nbsp;your&nbsp;name&nbsp;O\'reilly?"</span><span style="color: #007700">;<br /><br /></span><span style="color: #FF8000">//&nbsp;Outputs:&nbsp;Is&nbsp;your&nbsp;name&nbsp;O'reilly?<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #0000BB">stripSlashes</span><span style="color: #007700">(</span><span style="color: #0000BB">$str</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">?&gt;</span>
</span>
</code></div>
    </div>

   </div>
  </p>
  <blockquote><p><strong>Note</strong>: 
   <p>
    <span><strong>stripSlashes()</strong></span> is not recursive. If you want to apply
    this function to a multi-dimensional array, you need to use a recursive
    function.
   </p>
  </p></blockquote>
  <p>
   <div>
    <p><strong>Example #2 Using <span><strong>stripSlashes()</strong></span> on an array</strong></p>
    <div>
<div><code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #0000BB">stripslashes_deep</span><span style="color: #007700">(</span><span style="color: #0000BB">$value</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$value&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">is_array</span><span style="color: #007700">(</span><span style="color: #0000BB">$value</span><span style="color: #007700">)&nbsp;?<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">array_map</span><span style="color: #007700">(</span><span style="color: #DD0000">'stripslashes_deep'</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$value</span><span style="color: #007700">)&nbsp;:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">stripSlashes</span><span style="color: #007700">(</span><span style="color: #0000BB">$value</span><span style="color: #007700">);<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;</span><span style="color: #0000BB">$value</span><span style="color: #007700">;<br />}<br /><br /></span><span style="color: #FF8000">//&nbsp;Example<br /></span><span style="color: #0000BB">$array&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"f\\'oo"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"b\\'ar"</span><span style="color: #007700">,&nbsp;array(</span><span style="color: #DD0000">"fo\\'o"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"b\\'ar"</span><span style="color: #007700">));<br /></span><span style="color: #0000BB">$array&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">stripslashes_deep</span><span style="color: #007700">(</span><span style="color: #0000BB">$array</span><span style="color: #007700">);<br /><br /></span><span style="color: #FF8000">//&nbsp;Output<br /></span><span style="color: #0000BB">print_r</span><span style="color: #007700">(</span><span style="color: #0000BB">$array</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">?&gt;</span>
</span>
</code></div>
    </div>

    <div><p>The above example will output:</p></div>
    <div>
<div><pre>
Array
(
    [0] =&gt; f&#039;oo
    [1] =&gt; b&#039;ar
    [2] =&gt; Array
        (
            [0] =&gt; fo&#039;o
            [1] =&gt; b&#039;ar
        )

)
</pre></div>
    </div>
   </div>
  </p>
 </div>
