<html>
<head>
  <script src="jquery-2.0.3.min.js"></script>
  <script src="jquery.snippet.min.js"></script>
  <script src="individual.js"></script>
  <link rel="stylesheet" href="jquery.snippet.min.css"/>
  <link rel="stylesheet" href="inject.css"/>
  <link rel="stylesheet" href="individual.css"/>
</head>
<body>
<div class="ajax-area">
  <h1>reverseKeySort</h1>

  <div class="short-description">
    <code>reverseKeySort( int <var>$flags</var> = SORT_REGULAR</span> ): array</code>
    <p>
      Context: array.<br/>
      Alias of <a href="http://php.net/manual/en/function.krsort.php">krsort</a>.<br/>
      Sorts keys in reverse order.
    </p>
  </div>

  <div>
    Sorts <var>$scalarObject->val</var> by key in reverse order, maintaining key to data
    correlations. This is useful mainly for associative arrays.
  </div>

  <div>
    <h3>Parameters</h3>
    <dl>
      <dt>$flags</dt>
      <dd>For details see <a href="sort.htm">sort()</a>.</dd>
    </dl>
  </div>

  <div>
    <h3>Return Values</h3>
    <p>Returns <code>TRUE</code> on success or <code>FALSE</code> on failure.</p>
  </div>

  <div class="examples">
    <p><strong>Example #1 reverseKeySort() example</strong></p>
    <pre class="php-code">
      <?php
      $fruits = array("d"=>"lemon", "a"=>"orange", "b"=>"banana", "c"=>"apple");
      reverseKeySort($fruits);
      foreach ($fruits as $key => $val) {
          echo "$key = $val\n";
      }
      ?>
    </pre>
    <div>The above example will output:</div>
    <pre class="output">
      d = lemon
      c = apple
      b = banana
      a = orange
    </pre>
  </div>
</div>
</body>
