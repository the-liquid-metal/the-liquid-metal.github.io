<html>
<head>
    <script src="jquery-2.0.3.min.js"></script>
    <script src="jquery.snippet.min.js"></script>
    <script src="individual.js"></script>
    <link rel="stylesheet" href="jquery.snippet.min.css"/>
    <link rel="stylesheet" href="inject.css"/>
    <link rel="stylesheet" href="individual.css"/>
</head>
<body>
<div class="ajax-area">
    <h1>unique</h1>

    <div class="short-description">
        <code>unique( int <var>$flags</var> = SORT_STRING ): array</code>
        <p>
            Alias of <a href="http://php.net/manual/en/function.array-unique.php">array_unique</a>.<br/>
            Removes duplicate values.
        </p>
    </div>

    <div>
        <p>
            Takes an input <var>$scalarObject->val</var> and returns a new array
            without duplicate values.
        </p>
        <p>
            Note that keys are preserved. <strong>unique()</strong> sorts the values
            treated as string at first, then will keep the first key encountered for
            every value, and ignore all following keys. It does not mean that the key
            of the first related value from the unsorted <var>$scalarObject->val</var> will be kept.
        </p>
        <blockquote>
            <strong>Note</strong>: Two elements are considered equal if and only if
            <code>(string) $elem1 === (string) $elem2</code> i.e. when the string representation
            is the same, the first element will be used.
        </blockquote>
    </div>

    <div>
        <h3>Parameters</h3>
        <dl>
            <dt>$flags</dt>
            <dd>
                <p>Sorting type flags:</p>
                <ul>
                    <li><code>SORT_REGULAR</code> - compare items normally (don't change types)</li>
                    <li><code>SORT_NUMERIC</code> - compare items numerically</li>
                    <li><code>SORT_STRING</code> - compare items as strings</li>
                    <li><code>SORT_LOCALE_STRING</code> - compare items as strings, based on the current locale.</li>
                </ul>
            </dd>
        </dl>
    </div>

    <div>
        <h3>Return Values</h3>
        <p>The filtered array.</p>
    </div>

    <div class="examples">
        <p><strong>Example #1 unique() example</strong></p>
        <pre class="php-code">
      <?php
      $input = array("a" => "green", "red", "b" => "green", "blue", "red");
      $result = unique($input);
      print_r($result);
      ?>
    </pre>

        <div>The above example will output:</div>
        <pre class="output">
      Array
      (
          [a] => green
          [0] => red
          [1] => blue
      )
    </pre>

        <p><strong>Example #2 unique() and types</strong></p>
        <pre class="php-code">
      <?php
      $input = array(4, "4", "3", 4, 3, "3");
      $result = unique($input);
      var_dump($result);
      ?>
    </pre>

        <div>The above example will output:</div>
        <pre class="output">
      array(2) {
        [0] => int(4)
        [2] => string(1) "3"
      }
    </pre>
    </div>
</div>
</body>
