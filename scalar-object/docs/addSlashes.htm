  <h1>addSlashes</h1>

  <div>
    <p>
      Returns a string with backslashes before characters that need to be escaped. These characters are single
      quote (<em>'</em>), double quote (<em>"</em>), backslash (<em>\</em>) and NUL (the <code>NULL</code> byte).
    </p>
    <p>
      An example use of <strong>addSlashes()</strong> is when you're entering data into string
      that is evaluated by PHP. For example, <em>O'Reilly</em> is stored in $str, you need to
      escape $str. (e.g.  eval("echo '".addSlashes($str)."';"); )
    </p>
    <p>
      To escape database parameters, DBMS specific escape function
      (e.g. <a href="mysqli.real-escape-string.php">mysqli_real_escape_string()</a> for MySQL or
      <a href="function.pg-escape-literal.php">pg_escape_literal()</a>, <a href="function.pg-escape-string.php">pg_escape_string()</a>
      for PostgreSQL) should be used for security reasons.  DBMSes have
      differect escape specification for identifiers (e.g. Table name,
      field name) than parameters. Some DBMS such as PostgreSQL provides
      identifier escape
      function, <a href="function.pg-escape-identifier.php">pg_escape_identifier()</a>, but not all
      DBMS provides identifier escape API. If this is the case, refer to
      your database system manual for proper escaping method.
    </p>
    <p>
      If your DBMS doesn't have an escape function and the DBMS uses <em>\</em> to escape special chars,
      you might be able to use this function only when this escape method is adequate for your database.
      Please note that use of <strong>addSlashes()</strong> for database parameter escaping can be cause
      of security issues on most databases.
    </p>
    <p>
      The PHP directive <a href="info.configuration.php#ini.magic-quotes-gpc">magic_quotes_gpc</a> was
      <em>on</em> by default before PHP 5.4, and it essentially ran <strong>addSlashes()</strong> on
      all GET, POST, and COOKIE data. Do not use <strong>addSlashes()</strong> on strings that have already
      been escaped with <a href="info.configuration.php#ini.magic-quotes-gpc">magic_quotes_gpc</a> as you'll
      then do double escaping. The function <a href="function.get-magic-quotes-gpc.php">get_magic_quotes_gpc()</a>
      may come in handy for checking this.
    </p>
  </div>

  <div>
    <h3>Parameters</h3>
    <dl>
      <dt>str</dt>
      <dd>The string to be escaped.</dd>
    </dl>
  </div>

  <div>
    <h3>Return Values</h3>
    <p>Returns the escaped string.</p>
  </div>

  <div class="examples">
    <p><strong>Example #1 An addSlashes() example</strong></p>
    <pre class="php-code">
     <?php
     $str = "Is your name O'Reilly?";

     // Outputs: Is your name O\'Reilly?
     echo addSlashes($str);
     ?>
    </pre>
  </div>
