<html>
<head>
    <script src="jquery-2.0.3.min.js"></script>
    <script src="jquery.snippet.min.js"></script>
    <script src="individual.js"></script>
    <link rel="stylesheet" href="jquery.snippet.min.css"/>
    <link rel="stylesheet" href="inject.css"/>
    <link rel="stylesheet" href="individual.css"/>
</head>
<body>
<div class="ajax-area">
    <h1>calc</h1>

    <div class="short-description">
        <code>calc (string <var>$operation</var>, bool <var>$includeNull</var> = false): float|int|string</code>
        <p>
            Calculates the sum/avg/max/min/product of values.<br/><br/>
            see <a target="_blank" href="http://php.net/manual/en/function.array-sum.php">array_sum</a>&nbsp;
            <a target="_blank" href="http://php.net/manual/en/function.max.php">max</a>&nbsp;
            <a target="_blank" href="http://php.net/manual/en/function.min.php">min</a>&nbsp;
            <a target="_blank" href="http://php.net/manual/en/function.array-product.php">array_product</a>.<br/>
        </p>
    </div>

    <div>
        This method is only applied if <var>ScalarArray::type</var> is <code>int</code>, <code>float</code> or
        <code>string</code> and the internal array is not empty, otherwise all caculation results are <code>NAN</code>.
    </div>

    <h3>Parameters</h3>
    <dl>
        <dt>$operation</dt>
        <dd>
            available operation: <code>sum</code> (summary), <code>avg</code> (average),
            <code>max</code> (maximum), <code>min</code> (minimum), <code>product</code>
        </dd>
        <dt>$includeNull</dt>
        <dd>Whether <code>null</code>, <code>NAN</code>, and <code>INF</code> is included or not.
            If <code>true</code>, and <var>ScalarArray::type</var> is <code>int</code> or <code>float</code>,
            they are treated as <code>0</code> (zero), and counter are applied to them.
            If <code>true</code>, and <var>ScalarArray::type</var> is <code>string</code>, <code>null</code>
            is treated as <code>""</code>.
        </dd>
    </dl>

    <h3>Return Values</h3>
    <p>The sum/avg/max/min/product of values as an integer or float.</p>

    <pre class="php-code">
        $sa = new ScalarArray("int", false, [2, 4, 6, 8]);
        $sa->calc("sum");     // output: 20
        $sa->calc("avg");     // output: 5
        $sa->calc("max");     // output: 8
        $sa->calc("min");     // output: 2
        $sa->calc("product"); // output: 384

        $sa = new ScalarArray("int", true, [2, null, NAN, INF, 4, 6, 8]);
        $sa->calc("sum");     // output: 20
        $sa->calc("avg");     // output: 5
        $sa->calc("max");     // output: 8
        $sa->calc("min");     // output: 2
        $sa->calc("product"); // output: 384

        $sa->calc("sum", true);     // output: 20
        $sa->calc("avg", true);     // output: 2.8571428571429
        $sa->calc("max", true);     // output: 8
        $sa->calc("min", true);     // output: 2
        $sa->calc("product", true); // output: 384

        // modified behaviour: 0 is converted to NAN
        $sa = new ScalarArray("string", false, ["a", "aa", "aab", "aaa"]);
        $sa->calc("sum");     // output: NAN
        $sa->calc("avg");     // output: NAN
        $sa->calc("max");     // output: "aab"
        $sa->calc("min");     // output: "a"
        $sa->calc("product"); // output: NAN

        // modified behaviour: 0 is converted to NAN
        $sa = new ScalarArray("string", true, ["a", null, "aa", "aab", "aaa"]);
        $sa->calc("sum");     // output: NAN
        $sa->calc("avg");     // output: NAN
        $sa->calc("max");     // output: "aab"
        $sa->calc("min");     // output: ""
        $sa->calc("product"); // output: NAN

        // modified behaviour: 0 is converted to NAN, null is treated as ""
        $sa = new ScalarArray("bool", false, [true, true, false, true]);
        $sa->calc("sum");     // output: NAN
        $sa->calc("avg");     // output: NAN
        $sa->calc("max");     // output: NAN
        $sa->calc("min");     // output: NAN
        $sa->calc("product"); // output: NAN
    </pre>
</div>
</body>
