
 <div>
  <h1>slice</h1>
 </div>
 <div>
  <p>
   <span><strong>slice()</strong></span> returns the sequence of elements
   from the array <code class="parameter">array</code> as specified by the
   <code class="parameter">offset</code> and <code class="parameter">length</code>
   parameters.
  </p>
 </div>

 <div class="parameters">
  <h3>Parameters</h3>
  <p>
   <dl>

     <dt>
<code class="parameter">array</code></dt>

     <dd>

      <p>
       The input array.
      </p>
     </dd>

     <dt>
<code class="parameter">offset</code></dt>

     <dd>

      <p>
       If <code class="parameter">offset</code> is non-negative, the sequence will
       start at that offset in the <code class="parameter">array</code>.  If
       <code class="parameter">offset</code> is negative, the sequence will
       start that far from the end of the <code class="parameter">array</code>.
      </p>
     </dd>

     <dt>
<code class="parameter">length</code></dt>

     <dd>

      <p>
       If <code class="parameter">length</code> is given and is positive, then
       the sequence will have up to that many elements in it. If the array
       is shorter than the <code class="parameter">length</code>, then only the
       available array elements will be present. If
       <code class="parameter">length</code> is given and is negative then the
       sequence will stop that many elements from the end of the
       array. If it is omitted, then the sequence will have everything
       from <code class="parameter">offset</code> up until the end of the
       <code class="parameter">array</code>.
      </p>
     </dd>

     <dt>
<code class="parameter">preserve_keys</code></dt>

     <dd>

      <p>
       Note that <span><strong>slice()</strong></span> will reorder and reset the
       numeric array indices by default. You can change this behaviour by setting
       <code class="parameter">preserve_keys</code> to <strong><code>TRUE</code></strong>.
      </p>
     </dd>

   </dl>

  </p>
 </div>

 <div class="returnvalues">
  <h3>Return Values</h3>
  <p>
   Returns the slice.
  </p>
 </div>

 <div class="examples">
  <p>
   <div>
    <p><strong>Example #1 <span><strong>slice()</strong></span> examples</strong></p>
    <div>
<div><code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br />$input&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"a"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"b"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"c"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"d"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"e"</span><span style="color: #007700">);<br /><br /></span><span style="color: #0000BB">$output&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">slice</span><span style="color: #007700">(</span><span style="color: #0000BB">$input</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">2</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;returns&nbsp;"c",&nbsp;"d",&nbsp;and&nbsp;"e"<br /></span><span style="color: #0000BB">$output&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">slice</span><span style="color: #007700">(</span><span style="color: #0000BB">$input</span><span style="color: #007700">,&nbsp;-</span><span style="color: #0000BB">2</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">1</span><span style="color: #007700">);&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;returns&nbsp;"d"<br /></span><span style="color: #0000BB">$output&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">slice</span><span style="color: #007700">(</span><span style="color: #0000BB">$input</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">0</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">3</span><span style="color: #007700">);&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;returns&nbsp;"a",&nbsp;"b",&nbsp;and&nbsp;"c"<br /><br />//&nbsp;note&nbsp;the&nbsp;differences&nbsp;in&nbsp;the&nbsp;array&nbsp;keys<br /></span><span style="color: #0000BB">print_r</span><span style="color: #007700">(</span><span style="color: #0000BB">slice</span><span style="color: #007700">(</span><span style="color: #0000BB">$input</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">2</span><span style="color: #007700">,&nbsp;-</span><span style="color: #0000BB">1</span><span style="color: #007700">));<br /></span><span style="color: #0000BB">print_r</span><span style="color: #007700">(</span><span style="color: #0000BB">slice</span><span style="color: #007700">(</span><span style="color: #0000BB">$input</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">2</span><span style="color: #007700">,&nbsp;-</span><span style="color: #0000BB">1</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">true</span><span style="color: #007700">));<br /></span><span style="color: #0000BB">?&gt;</span>
</span>
</code></div>
    </div>

    <div><p>The above example will output:</p></div>
    <div>
<div><pre>
Array
(
    [0] =&gt; c
    [1] =&gt; d
)
Array
(
    [2] =&gt; c
    [3] =&gt; d
)
</pre></div>
    </div>
   </div>
  </p>
 </div>