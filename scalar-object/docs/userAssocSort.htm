<h1>userAssocSort</h1>

 <div>
  <p>
   This function sorts an array such that array indices maintain their
   correlation with the array elements they are associated with, using a
   user-defined comparison function.
  </p>
  <p>
   This is used mainly when sorting associative arrays where the actual
   element order is significant.
  </p>
  <blockquote><strong>Note</strong>:
    If two members compare as equal, their relative order in the sorted array is undefined.
   </blockquote>
 </div>

 <div>
  <h3>Parameters</h3>
   <dl>
     <dt>array</dt>
     <dd>The input array.</dd>

     <dt>value_compare_func</dt>
     <dd>See <a href="function.usort.php">usort()</a> and <a href="function.uksort.php">uksort()</a> for
       examples of user-defined comparison functions.</dd>
   </dl>
 </div>

 <div>
  <h3>Return Values</h3>
  <p>Returns <code>TRUE</code> on success or <code>FALSE</code> on failure.</p>
 </div>

 <div class="examples">
    <p><strong>Example #1 Basic userAssocSort() example</strong></p>
<pre class="php-code">
<?php
// Comparison function
function cmp($a, $b) {
    if ($a == $b) {
        return 0;
    }
    return ($a &lt; $b) ? -1 : 1;
}

// Array to be sorted
$array = array('a' => 4, 'b' => 8, 'c' => -1, 'd' => -9, 'e' => 2, 'f' => 5, 'g' => 3, 'h' => -4);
print_r($array);

// Sort and print the resulting array
userAssocSort($array, 'cmp');
print_r($array);
?>
</pre>
    <div>The above example will output:</div>
<pre>
Array
(
    [a] => 4
    [b] => 8
    [c] => -1
    [d] => -9
    [e] => 2
    [f] => 5
    [g] => 3
    [h] => -4
)
Array
(
    [d] => -9
    [h] => -4
    [c] => -1
    [e] => 2
    [g] => 3
    [a] => 4
    [f] => 5
    [b] => 8
)
</pre>
 </div>
