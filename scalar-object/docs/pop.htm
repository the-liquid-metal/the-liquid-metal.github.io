
 <div class="refnamediv">
  <h1 class="refname">pop</h1>
 </div>
 
 <div class="refsect1 description">
  <p class="para rdfs-comment">
   <span><strong>pop()</strong></span> pops and returns the last value of
   the <code class="parameter">array</code>, shortening the
   <code class="parameter">array</code> by one element.
  </p>
  <blockquote><p><strong>Note</strong>: <span>This function will
<span><a href="function.reset.php" class="function">reset()</a></span> the <span class="type"><a href="language.types.array.php" class="type array">array</a></span> pointer of the input array after
use.</span></p></blockquote>
 </div>


 <div class="refsect1 parameters">
  <h3 class="title">Parameters</h3>
  <p>
   <dl>

    
     <dt>
<code class="parameter">array</code></dt>

     <dd>

      <p>
       The array to get the value from.
      </p>
     </dd>

    
   </dl>

  </p>
 </div>


 <div class="refsect1 returnvalues">
  <h3 class="title">Return Values</h3>
  <p>
   Returns the last value of <code class="parameter">array</code>.
   If <code class="parameter">array</code> is empty (or is not an array),
   <strong><code>NULL</code></strong> will be returned.
  </p>
 </div>


 <div class="refsect1 errors">
  <h3 class="title">Errors/Exceptions</h3>
  <p>
   This function will produce an error of level <a href="errorfunc.constants.php" class="link">
   E_WARNING</a> when called on a non-array.
  </p>
 </div>


 <div class="refsect1 examples">
  <p>
   <div>
    <p><strong>Example #1 <span><strong>pop()</strong></span> example</strong></p>
    <div>
<div><code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br />$stack&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"orange"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"banana"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"apple"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"raspberry"</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">$fruit&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">pop</span><span style="color: #007700">(</span><span style="color: #0000BB">$stack</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">print_r</span><span style="color: #007700">(</span><span style="color: #0000BB">$stack</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">?&gt;</span>
</span>
</code></div>
    </div>

    <div><p>
     After this, <var class="varname"><var class="varname">$stack</var></var> will have only 3 elements:
    </p></div>
    <div>
<div><pre>
Array
(
    [0] =&gt; orange
    [1] =&gt; banana
    [2] =&gt; apple
)
</pre></div>
    </div>
    <div><p>
     and <em>raspberry</em> will be assigned to
     <var class="varname"><var class="varname">$fruit</var></var>.
    </p></div>
   </div>
  </p>
 </div>
