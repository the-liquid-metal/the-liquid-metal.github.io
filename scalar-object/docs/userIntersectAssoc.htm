<h1>userIntersectAssoc</h1>
 <div>
  <p>
   Computes the intersection of arrays with additional index check, compares
   data by a callback function.
  </p>
  <p>
   Note that the keys are used in the comparison unlike in
   <a href="function.array-uintersect.php">array_uintersect()</a>.
   The data is compared by using a callback function.
  </p>
 </div>

 <div>
  <h3>Parameters</h3>
  <p>
   <dl>
     <dt><code>array1</code></dt>
     <dd>The first array.</dd>

     <dt><code>array2</code></dt>
     <dd>The second array.</dd>

     <dt><code>value_compare_func</code></dt>
     <dd>The comparison function must return an integer less than, equal to, or greater than zero if
       the first argument is considered to be respectively less than, equal to, or greater than the second.</dd>
   </dl>
  </p>
 </div>

 <div>
  <h3>Return Values</h3>
  <p>
   Returns an array containing all the values of
   <code>array1</code> that are present in all the arguments.
  </p>
 </div>

 <div class="examples">
  <p>
   <div>
    <p><strong>Example #1 userIntersectAssoc() example</strong></p>
    <pre><span style="color: #0000BB">&lt;?php<br />$array1&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"a"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"green"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"b"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"brown"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"c"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"blue"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"red"</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">$array2&nbsp;</span><span style="color: #007700">=&nbsp;array(</span><span style="color: #DD0000">"a"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"GREEN"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"B"&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #DD0000">"brown"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"yellow"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"red"</span><span style="color: #007700">);<br /><br /></span><span style="color: #0000BB">print_r</span><span style="color: #007700">(</span><span style="color: #0000BB">userIntersectAssoc</span><span style="color: #007700">(</span><span style="color: #0000BB">$array1</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$array2</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"strcasecmp"</span><span style="color: #007700">));<br /></span><span style="color: #0000BB">?&gt;</span></pre>

    <div>The above example will output:</div>
<pre>
Array
(
    [a] =&gt; green
)
</pre>
   </div>
  </p>
 </div>